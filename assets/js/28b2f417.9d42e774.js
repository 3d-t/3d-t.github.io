"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7731],{15680:(e,n,t)=>{t.d(n,{xA:()=>d,yg:()=>f});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},p="mdxType",h={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(t),u=i,f=p["".concat(c,".").concat(u)]||p[u]||h[u]||r;return t?a.createElement(f,o(o({ref:n},d),{},{components:t})):a.createElement(f,o({ref:n},d))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s[p]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<r;l++)o[l]=t[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},62078:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var a=t(58168),i=(t(96540),t(15680));const r={sidebar_position:60},o="Location",s={unversionedId:"visualization/location",id:"visualization/location",title:"Location",description:"In many cases specifying the position or orientation of components as numbers in 3D space is not user-friendly. For example, in a digital twin of a parking garage, it is more convenient to specify the location of a vehicle by a symbolic code like A23 instead of XYZ-coordinates in 3D space.",source:"@site/docs/visualization/location.md",sourceDirName:"visualization",slug:"/visualization/location",permalink:"/docs/visualization/location",draft:!1,tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60},sidebar:"defaultSidebar",previous:{title:"Position",permalink:"/docs/visualization/position"},next:{title:"Animation",permalink:"/docs/visualization/animations"}},c={},l=[{value:"Solids",id:"solids",level:2},{value:"Topics",id:"topics",level:2},{value:"Model",id:"model",level:2},{value:"Explanation",id:"explanation",level:2}],d={toc:l},p="wrapper";function h(e){let{components:n,...r}=e;return(0,i.yg)(p,(0,a.A)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"location"},"Location"),(0,i.yg)("p",null,"In many cases specifying the position or orientation of components as numbers in 3D space is not user-friendly. For example, in a digital twin of a parking garage, it is more convenient to specify the location of a vehicle by a symbolic code like ",(0,i.yg)("inlineCode",{parentName:"p"},"A23")," instead of XYZ-coordinates in 3D space."),(0,i.yg)("h2",{id:"solids"},"Solids"),(0,i.yg)("p",null,"This example shows how we can locate a server in a rack in a data center. First, we create a solid that represents a single unit of space for a server, typically with a width of 19 inches.  "),(0,i.yg)("p",null,(0,i.yg)("img",{src:t(30322).A,width:"1200",height:"750"})),(0,i.yg)("p",null,"A 19-inch rack with 19 units stacked vertically is defined, where each unit has a unique number between ",(0,i.yg)("inlineCode",{parentName:"p"},"1")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"19"),". This rack is repeated four times and each rack has a unique identifier between ",(0,i.yg)("inlineCode",{parentName:"p"},"a")," - ",(0,i.yg)("inlineCode",{parentName:"p"},"z"),". So the left lower unit has identifier ",(0,i.yg)("inlineCode",{parentName:"p"},"a_1"),". When exporting this model to GLTF, each unit in the rack is represented by a node that calls the ",(0,i.yg)("inlineCode",{parentName:"p"},"Unit")," part. By convention, the naming of the node will be at the form ",(0,i.yg)("inlineCode",{parentName:"p"},"a_1_Unit"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"c_4_Unit"),", and so forth."),(0,i.yg)("p",null,(0,i.yg)("img",{src:t(65479).A,width:"1200",height:"750"})),(0,i.yg)("h2",{id:"topics"},"Topics"),(0,i.yg)("p",null,"We create a topic to link the geometry of the rack to the GLTF file, and a subtopic for each unit in the rack that has a link to the name of the node in the GLTF file."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"datacenter.rack.geometry = Rack19.gltf\ndatacenter.rack.a1.node = a_1_Unit\ndatacenter.rack.a2.node = a_2_Unit\n")),(0,i.yg)("p",null,"Next, we define topics for servers that are placed in the rack. Each server has a link to the GLTF file. The subtopic ",(0,i.yg)("inlineCode",{parentName:"p"},"location")," refers to another topic, such as ",(0,i.yg)("inlineCode",{parentName:"p"},"datacenter.rack.a2"),", which is defined as the position of node ",(0,i.yg)("inlineCode",{parentName:"p"},"a_1_Unit")," in the ",(0,i.yg)("inlineCode",{parentName:"p"},"Rack19.gltf")," object."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"datacenter.server.d_1.location = datacenter.rack.a2\ndatacenter.server.d_1.geometry = Server.gltf\ndatacenter.server.d_1.temperature = 65\ndatacenter.server.d_1.os = Ubuntu 22.4\ndatacenter.server.d_2.location = datacenter.rack.a3\ndatacenter.server.d_2.geometry = Server.gltf\ndatacenter.server.d_2.temperature = 65\ndatacenter.server.d_2.os = Ubuntu 22.4\n")),(0,i.yg)("h2",{id:"model"},"Model"),(0,i.yg)("p",null,"A digital twin of the data center is defined by including the ",(0,i.yg)("inlineCode",{parentName:"p"},"datacenter.rack")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"datacenter.server")," topics. This will automatically include all subtopics such as for the rack units and servers. To place a specific server in the rack the user can click on the server and specify the location. In this example, a server if moved from rack position ",(0,i.yg)("inlineCode",{parentName:"p"},"c9")," to ",(0,i.yg)("inlineCode",{parentName:"p"},"a17"),". You can also combine the ",(0,i.yg)("inlineCode",{parentName:"p"},"location")," with a ",(0,i.yg)("inlineCode",{parentName:"p"},"translation"),". In this case, the translation is done relative to the node defined by the location. For example, a ",(0,i.yg)("inlineCode",{parentName:"p"},"translation")," with value ",(0,i.yg)("inlineCode",{parentName:"p"},"0.3, 0, 3")," will move the server forward in the rack."),(0,i.yg)("p",null,(0,i.yg)("img",{src:t(58973).A,width:"1200",height:"750"})),(0,i.yg)("h2",{id:"explanation"},"Explanation"),(0,i.yg)("p",null,"When the GLTF of the rack is rendered the transformation matrices, which includes the position and orientation in world coordinates, of all nodes are stored in a table. When the servers are rendered the position has a reference to a topic in the rack. This topic has a subtopic ",(0,i.yg)("inlineCode",{parentName:"p"},".node")," that points to a node in the ",(0,i.yg)("inlineCode",{parentName:"p"},"Rack19.gltf"),". The transformation matrix of this node is used to specify the position and orientation of the server. If there is an additional ",(0,i.yg)("inlineCode",{parentName:"p"},".translation")," subtopic, the translation is applied relative to the transformation matrix of the node in the rack."),(0,i.yg)("mermaid",{value:"flowchart \n    subgraph Topics\n    direction TB\n        Server --\x3e ServerD1\n        ServerD1[d_1] --\x3e LocationD1[location]\n        ServerD1[d_1] --\x3e TranslationD1[translation]\n    end\n    subgraph Rack\n        direction TB\n        RackGL[Rack] --\x3e NodeA1GL[a_1_Unit]\n        NodeA1GL --\x3e TA1[Transformation]\n    end\n    subgraph Servers\n        ServerD1GL[Server]\n    end\n    TA1 --\x3e LocationD1\n    LocationD1 --\x3e ServerD1GL\n    TranslationD1 --\x3e LocationD1"}))}h.isMDXComponent=!0},58973:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/visualization_model_datacenter-84298074a9761e048834708156db5063.png"},65479:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/visualization_solid_rack19-a8f4bb9bf4684f18b672df8fe36f623e.png"},30322:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/visualization_solid_unit-c9809a57cdbbcda0fe8fd9b1edd92d34.png"}}]);