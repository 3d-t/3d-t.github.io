"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8581],{35610:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"category","label":"Concepts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Digital Twin","href":"/docs/concepts/twin","docId":"concepts/twin"},{"type":"link","label":"Data exchange","href":"/docs/concepts/controlcycle","docId":"concepts/controlcycle"},{"type":"link","label":"Topic","href":"/docs/concepts/topic","docId":"concepts/topic"},{"type":"link","label":"Spacetime","href":"/docs/concepts/spacetime","docId":"concepts/spacetime"},{"type":"link","label":"Internet Of Things","href":"/docs/concepts/iot","docId":"concepts/iot"},{"type":"link","label":"Machine learning","href":"/docs/concepts/ml","docId":"concepts/ml"},{"type":"link","label":"Visualization","href":"/docs/concepts/visualization","docId":"concepts/visualization"},{"type":"link","label":"Use cases","href":"/docs/concepts/usecases","docId":"concepts/usecases"}]},{"type":"category","label":"Installation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Hardware","href":"/docs/installation/hardware","docId":"installation/hardware"},{"type":"link","label":"Kubernetes","href":"/docs/installation/kubernetes","docId":"installation/kubernetes"},{"type":"link","label":"Releases","href":"/docs/installation/releases","docId":"installation/releases"},{"type":"link","label":"External access via SSL","href":"/docs/installation/ingress","docId":"installation/ingress"},{"type":"link","label":"MQTT","href":"/docs/installation/mqtt","docId":"installation/mqtt"},{"type":"link","label":"Zwave","href":"/docs/installation/zwave","docId":"installation/zwave"},{"type":"link","label":"Zigbee","href":"/docs/installation/zigbee","docId":"installation/zigbee"},{"type":"link","label":"Backup","href":"/docs/installation/backup","docId":"installation/backup"},{"type":"link","label":"Trouble shooting","href":"/docs/installation/troubleshooting","docId":"installation/troubleshooting"}]},{"type":"category","label":"Topics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Registration","href":"/docs/tutorial/registration","docId":"tutorial/registration"},{"type":"link","label":"User interface","href":"/docs/tutorial/ui","docId":"tutorial/ui"},{"type":"link","label":"Topic","href":"/docs/tutorial/topic","docId":"tutorial/topic"},{"type":"link","label":"Documents","href":"/docs/tutorial/documents","docId":"tutorial/documents"},{"type":"link","label":"Time","href":"/docs/tutorial/time","docId":"tutorial/time"},{"type":"link","label":"Location","href":"/docs/tutorial/location","docId":"tutorial/location"}]},{"type":"category","label":"Forms","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Inspection","href":"/docs/forms/inspection","docId":"forms/inspection"},{"type":"link","label":"Checklist","href":"/docs/forms/checklist","docId":"forms/checklist"},{"type":"link","label":"Survey","href":"/docs/forms/survey","docId":"forms/survey"},{"type":"link","label":"Assessment","href":"/docs/forms/assessment","docId":"forms/assessment"},{"type":"link","label":"E-learning","href":"/docs/forms/exam","docId":"forms/exam"},{"type":"link","label":"Asset","href":"/docs/forms/asset","docId":"forms/asset"}]},{"type":"category","label":"Import","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CSV","href":"/docs/import/csv","docId":"import/csv"},{"type":"link","label":"JSON","href":"/docs/import/json","docId":"import/json"},{"type":"link","label":"HTTP","href":"/docs/import/http","docId":"import/http"},{"type":"link","label":"SSH","href":"/docs/import/ssh","docId":"import/ssh"},{"type":"link","label":"MQTT","href":"/docs/import/mqtt","docId":"import/mqtt"}]},{"type":"category","label":"Integrations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Concept","href":"/docs/integrations/concept","docId":"integrations/concept"},{"type":"link","label":"Tesla","href":"/docs/integrations/tesla","docId":"integrations/tesla"},{"type":"link","label":"Home Assistant","href":"/docs/integrations/homeassistant","docId":"integrations/homeassistant"},{"type":"link","label":"Nefit","href":"/docs/integrations/nefit","docId":"integrations/nefit"},{"type":"link","label":"OpenWeather","href":"/docs/integrations/openweather","docId":"integrations/openweather"},{"type":"link","label":"Tuya","href":"/docs/integrations/tuya","docId":"integrations/tuya"},{"type":"link","label":"MQTT","href":"/docs/integrations/mqtt","docId":"integrations/mqtt"},{"type":"link","label":"Zwave","href":"/docs/integrations/zwave","docId":"integrations/zwave"},{"type":"link","label":"Fritzbox","href":"/docs/integrations/fritzbox","docId":"integrations/fritzbox"},{"type":"link","label":"SolarEdge","href":"/docs/integrations/solaredge","docId":"integrations/solaredge"},{"type":"link","label":"Smart meter","href":"/docs/integrations/smartmeter","docId":"integrations/smartmeter"},{"type":"link","label":"Crawler","href":"/docs/integrations/crawler","docId":"integrations/crawler"},{"type":"link","label":"People counter","href":"/docs/integrations/counter","docId":"integrations/counter"},{"type":"link","label":"Arduino - MQTT","href":"/docs/integrations/arduino","docId":"integrations/arduino"},{"type":"link","label":"ESP32 - GPS Tracker","href":"/docs/integrations/esp32","docId":"integrations/esp32"}]},{"type":"category","label":"Automation","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Controlling devices","href":"/docs/automation/control","docId":"automation/control"},{"type":"link","label":"Conditional statements","href":"/docs/automation/conditionals","docId":"automation/conditionals"},{"type":"link","label":"Loops","href":"/docs/automation/loops","docId":"automation/loops"},{"type":"link","label":"Timers","href":"/docs/automation/timers","docId":"automation/timers"}]},{"type":"category","label":"Monitoring","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Assertions","href":"/docs/monitoring/compliance","docId":"monitoring/compliance"},{"type":"link","label":"Dead sensor detection","href":"/docs/monitoring/updated","docId":"monitoring/updated"},{"type":"link","label":"Notifications","href":"/docs/monitoring/notifications","docId":"monitoring/notifications"}]},{"type":"category","label":"Analysis","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"History","href":"/docs/analysis/history","docId":"analysis/history"},{"type":"link","label":"Aggregation","href":"/docs/analysis/aggregation","docId":"analysis/aggregation"},{"type":"link","label":"Relationships","href":"/docs/analysis/relationships","docId":"analysis/relationships"},{"type":"link","label":"Forecasting","href":"/docs/analysis/forecasting","docId":"analysis/forecasting"}]},{"type":"category","label":"Buildings","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"IFC","href":"/docs/buildings/ifc","docId":"buildings/ifc"},{"type":"link","label":"Rooms","href":"/docs/buildings/area","docId":"buildings/area"},{"type":"link","label":"Units","href":"/docs/buildings/unit","docId":"buildings/unit"},{"type":"link","label":"Floors","href":"/docs/buildings/storeys","docId":"buildings/storeys"},{"type":"link","label":"Site","href":"/docs/buildings/site","docId":"buildings/site"},{"type":"link","label":"Layers","href":"/docs/buildings/filters","docId":"buildings/filters"},{"type":"link","label":"Slant","href":"/docs/buildings/slanted","docId":"buildings/slanted"},{"type":"link","label":"Curves","href":"/docs/buildings/round","docId":"buildings/round"}]},{"type":"category","label":"Equipment","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Primitives","href":"/docs/solids/primitives","docId":"solids/primitives"},{"type":"link","label":"Transform","href":"/docs/solids/transformation","docId":"solids/transformation"},{"type":"link","label":"Boolean","href":"/docs/solids/boolean","docId":"solids/boolean"},{"type":"link","label":"Hull","href":"/docs/solids/hull","docId":"solids/hull"},{"type":"link","label":"Extrude","href":"/docs/solids/extrude","docId":"solids/extrude"},{"type":"link","label":"Sweep","href":"/docs/solids/sweep","docId":"solids/sweep"},{"type":"link","label":"Tube","href":"/docs/solids/tube","docId":"solids/tube"},{"type":"link","label":"Repetition","href":"/docs/solids/repetition","docId":"solids/repetition"},{"type":"link","label":"Expressions","href":"/docs/solids/expressions","docId":"solids/expressions"},{"type":"link","label":"Parts","href":"/docs/solids/parts","docId":"solids/parts"}]},{"type":"category","label":"Visualization","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"GLTF Rewriting","href":"/docs/visualization/concept","docId":"visualization/concept"},{"type":"link","label":"Fixed color","href":"/docs/visualization/color","docId":"visualization/color"},{"type":"link","label":"Dynamic coloring","href":"/docs/visualization/colormap","docId":"visualization/colormap"},{"type":"link","label":"Light","href":"/docs/visualization/lights","docId":"visualization/lights"},{"type":"link","label":"Transformation","href":"/docs/visualization/transformation","docId":"visualization/transformation"},{"type":"link","label":"Scaling","href":"/docs/visualization/scaling","docId":"visualization/scaling"},{"type":"link","label":"Position","href":"/docs/visualization/position","docId":"visualization/position"},{"type":"link","label":"Location","href":"/docs/visualization/location","docId":"visualization/location"},{"type":"link","label":"Animation","href":"/docs/visualization/animations","docId":"visualization/animations"}]},{"type":"category","label":"API","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Documentation","href":"/docs/api/intro","docId":"api/intro"},{"type":"link","label":"Authorization","href":"/docs/api/authorization","docId":"api/authorization"}]},{"type":"category","label":"Reference","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Form controls","href":"/docs/reference/forms","docId":"reference/forms"},{"type":"link","label":"Form variables","href":"/docs/reference/variables","docId":"reference/variables"},{"type":"link","label":"Special topics","href":"/docs/reference/topics","docId":"reference/topics"},{"type":"link","label":"Markdown","href":"/docs/reference/markdown","docId":"reference/markdown"},{"type":"link","label":"JavaScript","href":"/docs/reference/javascript","docId":"reference/javascript"}]},{"type":"category","label":"Technology","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Architecture","href":"/docs/technology/architecture","docId":"technology/architecture"},{"type":"link","label":"Software stack","href":"/docs/technology/stack","docId":"technology/stack"}]},{"type":"category","label":"Contact","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Axxem","href":"/docs/contact/axxem","docId":"contact/axxem"}]}]},"docs":{"analysis/aggregation":{"id":"analysis/aggregation","title":"Aggregation","description":"When data is collected every 5 minutes and you want to analyze a long period the size of the dataset becomes too large for interactive viewing in a time chart or on a map. Data can be compressed by aggregation over a period. This means that for that period an average value, a minimum value and a maximum value is calculated. After selecting the period click on Update to get the aggregated data.","sidebar":"defaultSidebar"},"analysis/forecasting":{"id":"analysis/forecasting","title":"Forecasting","description":"In the previous example we have shown how you can forecast a value based on the value of other topics. Another way of forecasting is by interpolation of historical values. This can be done via regression or a neural network.","sidebar":"defaultSidebar"},"analysis/history":{"id":"analysis/history","title":"History","description":"When the state of a topic is changed the previous value is stored. The history information include the time and location of every value. This can be used for analysis and auditing purposes and to detect relations between topics.","sidebar":"defaultSidebar"},"analysis/relationships":{"id":"analysis/relationships","title":"Relationships","description":"A key element in understanding the patterns in data is comparing values from different topics. For example, when predicting the required power for heating or cooling a building you may want to observe the outside temperature and wind conditions. When predicting the number of visitors to a theme park you may want to take into account the weather forecast and vacation calendar.","sidebar":"defaultSidebar"},"api/authorization":{"id":"api/authorization","title":"Authorization","description":"Authorization of the API is implemented with JWT (Jason Web Tokens). To request a token you can use the Swagger API documentation. Click on the login section and select Try out. In the request body enter the credentials. Make sure you quote the keys and the values.","sidebar":"defaultSidebar"},"api/intro":{"id":"api/intro","title":"Documentation","description":"The app communicates with the server via Websockets and a REST API. The API can also be used to create, read, update and delete data from other systems or command line tools such as curl.","sidebar":"defaultSidebar"},"automation/conditionals":{"id":"automation/conditionals","title":"Conditional statements","description":"Conditional statements are used to add intelligence to the automation. They can be found in the Logic section of the editor and include several custom logic controls for dates and time. In the example below a If then else block is inserted and the if part is connected to an and/or block where you can insert two conditions. In this case two time conditions are used based on the value of the sunset and sunrise time obtained from the OpenWeather weather service. This information is then used to control garden lighting connected to the Tuya platform.","sidebar":"defaultSidebar"},"automation/control":{"id":"automation/control","title":"Controlling devices","description":"Once the connectors are setup you can control devices by changing the state. Instead of doing the manually for each state you can create automations that set multiple states at once and can be run automatically at scheduled intervals. Automations are created with a visual programming environment based on Google blockly which creates JavaScript code that is executed on the server. You can create the automations by dragging and dropping components like conditional statements or loops.","sidebar":"defaultSidebar"},"automation/loops":{"id":"automation/loops","title":"Loops","description":"Loops can be used to iterate over a collection of topics that match a pattern. Click on the Loops section to drag a loop block into the workspace. The loop has two fields00.","sidebar":"defaultSidebar"},"automation/timers":{"id":"automation/timers","title":"Timers","description":"Timers are used to trigger controls based on a specific date or time. They can be found in the section Timers of the automation editor. The example below is a timer for executing certain events based on the day of the week and time. You can add additional conditional statement to factor in other parameters such as temperature or presence of people.","sidebar":"defaultSidebar"},"buildings/area":{"id":"buildings/area","title":"Rooms","description":"To create an area, select the option Solids from the menu and click on + to add a new solid. Select the mode Advanced.  In the workspace click on + to show the side menu with blocks.","sidebar":"defaultSidebar"},"buildings/filters":{"id":"buildings/filters","title":"Layers","description":"By default, the building elements are displayed in transparent mode so you can see inside the building. You can also apply filters to show or hide certain building elements or storeys by clicking on the filter icon in the viewer. This shows a list of building element types and storeys.","sidebar":"defaultSidebar"},"buildings/ifc":{"id":"buildings/ifc","title":"IFC","description":"When visualizing IoT data such as temperature or humidity you can use 2D floorplans to show the area where the measurement is taken. A problem with using 2D data is that a building may contain multiple floors so you need many stacked floorplans, one for each floor. Another limitation of using 2D floorplans is that they do not adequately represent building elements that are slanted or rounded. For this reason, we will use 3D representations of building elements like floors, walls and spaces. If you already have a 3D model of your building you can import a BIM model as a GLTF or IFC file.","sidebar":"defaultSidebar"},"buildings/round":{"id":"buildings/round","title":"Curves","description":"The default building elements are efficient for modeling simple building shapes. To make more complex buildings with curved walls or walls that are slanted in x-, or y-direction you can use the power of solid modeling. Complex models are made by adding, subtracting or uniting basic shapes like cylinders, spheres, and curved surfaces.","sidebar":"defaultSidebar"},"buildings/site":{"id":"buildings/site","title":"Site","description":"The advantage of using visual programming for defining buildings is that it is very easy to create different versions. For example, the building below is created by changing the contents of the storey field to include more stories and by removing a letter from the repeat statement that defines the number of units per storey.","sidebar":"defaultSidebar"},"buildings/slanted":{"id":"buildings/slanted","title":"Slant","description":"To make slanted areas you can define a slant angle. This angle defines the slope in the x-direction starting at the part of the wall with the largest x-value. Angles more than 180 degrees have a negative angle.","sidebar":"defaultSidebar"},"buildings/storeys":{"id":"buildings/storeys","title":"Floors","description":"A building may have multiple floors, or storeys. To create a building add the Storey block and insert a part that represents the unit. In the block you define the names or numbers of the storeys and the height of each storey.","sidebar":"defaultSidebar"},"buildings/unit":{"id":"buildings/unit","title":"Units","description":"A floor, or storey, can be created by adding separate rooms and building elements such as balconies or galleries. To create a balcony a Slab and Wall object is used. They both include the same set of points that define the outline. Note that the wall is not closed.","sidebar":"defaultSidebar"},"concepts/controlcycle":{"id":"concepts/controlcycle","title":"Data exchange","description":"Data is acquired by people, sensors, and systems. The data is analyzed and visualized in 2D dashboards and 3D models. Custom rules defined with visual programming can be used to update the physical model through actuators connected to the internet.","sidebar":"defaultSidebar"},"concepts/iot":{"id":"concepts/iot","title":"Internet Of Things","description":"The Internet of Things (IoT) describes a network of smart devices that are connected to the internet. IoT can be applied in home and office automation, agriculture, manufacturing, transportation and smart cities. Designing an IoT network includes selecting devices, choosing a protocol for exchanging information and selecting a network technology for physical transport of data.","sidebar":"defaultSidebar"},"concepts/ml":{"id":"concepts/ml","title":"Machine learning","description":"Machine learning is a form of artificial intelligence (AI) where algoritms can detect trends and make forecast based on data. An example is a greenhouse farmer who needs to predict the amount of energy that is needed for the coming three days based on the forecasted number of sun hours, outside temperature and month in the year.","sidebar":"defaultSidebar"},"concepts/spacetime":{"id":"concepts/spacetime","title":"Spacetime","description":"A topic has a name and a value. The current value of the topic is called state.  To analyze trends and make predections is is necessary to store the history of all value changes in time and by location. For example, to monitor the trend in viral infections you want to see on a map where it has originated and how the number of infections vary by region and over time.","sidebar":"defaultSidebar"},"concepts/topic":{"id":"concepts/topic","title":"Topic","description":"All data exchanged between the physical object and its digital twin is stored as topics. A topic has a name, such as room.temperature, and a value.  The concept of topics can be found in other systems such as MQTT or Apache Kafka.","sidebar":"defaultSidebar"},"concepts/twin":{"id":"concepts/twin","title":"Digital Twin","description":"A digital twin is a virtual representation of a physical object with automatic and real-time data exchange.  Digital Twins have applications in manufacturing, automotive, construction, real estate, agriculture, utilities, healthcare, smart cities, retail, and mining. Their main purpose is to consolidate life cycle information, visualize trends and issues, analyze performance, assist in training, and make predictions.  The growth of Digital Twin technology is driven by the widespread availability of cloud computing, the Internet of Things, and Artificial Intelligence. Digital Twins are often considered complex and expensive because they require expensive CAD or BIM software, sensors, and data connections. This platform aims to make using digital twins easy and affordable.","sidebar":"defaultSidebar"},"concepts/usecases":{"id":"concepts/usecases","title":"Use cases","description":"The overall principles of automatic data acquisition, analysis and control can be applied to various application domains.  Data collection is not limited to IoT sensors but can be imported from user surveys, inspections or corporate IT systems.","sidebar":"defaultSidebar"},"concepts/visualization":{"id":"concepts/visualization","title":"Visualization","description":"A Digital Twin is a simplified model of a real world object such as an engine, a building or city. It can be used as a tool for visualizing IoT parameters, locating the position of objects in complex 3D structures and retrieving asset information by point and click in a 3D model.","sidebar":"defaultSidebar"},"contact/axxem":{"id":"contact/axxem","title":"Axxem","description":"Axxem conducts research and development on the design and operation of digital twins. This includes 3D solid modeling for creating structures and equipment, data connectivity to IoT sensors, machine learning to detect trends and anomalies, and data visualization in 3D models, dashboards, and charts. Digital twins help organizations monitor the performance of their assets, check compliance with service-level agreements, and automatically control connected devices. Application areas include facilities management, architecture/engineering and construction, equipment management, and smart cities.","sidebar":"defaultSidebar"},"forms/assessment":{"id":"forms/assessment","title":"Assessment","description":"An assessment is a special type of survey where points are awarded for each question. The total score is automatically calculated and stored in a topic. Assessments can be used during employee recruitment or to assess the knowledge of employees in an organization with respect to procedures and regulations.","sidebar":"defaultSidebar"},"forms/asset":{"id":"forms/asset","title":"Asset","description":"Forms can be used to display one of more topic values. For example, the topic asset.hvac.bosch.pressure can be displayed as a gauge and asset.hvac.bosch.thermostat can be displayed as a slider so that users can control the value with a graphical user interface instead of typing a value.","sidebar":"defaultSidebar"},"forms/checklist":{"id":"forms/checklist","title":"Checklist","description":"A checklist is a special type of inspection where the user of the form has to confirm that an item is in a certain state or that certain tasks have been executed. Checklist are often used to prevent errors and enforce compliance to safety procedures. By using digital checklists the completion of a checklist is recorded and when an internet connection is available the results of the checklist are stored in the database and can be reviewed by authorized persons. When a checklist is completed the time and location of completion is automatically recorded. This way there is confirmation that the checklist was performed at the right place and at the right time. For example, when an aircraft departure checklist is completed it can be checked that the completion was before the start of the flight and at the parking position on the airfield.","sidebar":"defaultSidebar"},"forms/exam":{"id":"forms/exam","title":"E-learning","description":"E-learning is a combination of online education and assessment. Educators can create content with text and images and questions can be used to check the understanding of the student. E-learning can be used to inform employees or new hires about company procedures or to check compliance against safety procedures. The page below shows a basic example of how text, images and questions can be combined.","sidebar":"defaultSidebar"},"forms/inspection":{"id":"forms/inspection","title":"Inspection","description":"One way to enter or update information is via an inspection by a person. An inspection is a form with multiple fields. Each field is a different topic. The values can be specified with different controls such as buttons, checkboxes and drop down lists. An overview of all controls and how they can be defined can be found in the reference section. Forms are specified in a special language which can be compared to markdown.","sidebar":"defaultSidebar"},"forms/survey":{"id":"forms/survey","title":"Survey","description":"A survey or questionnaire is a way to get information from suppliers, customers or employees. Surveys work in the same ways as inspections but they do not require authentication. You can create a survey and then distribute a link to the survey. Surveys can be useful to get input on customer satisfaction or can be part of an employee selection procedure.","sidebar":"defaultSidebar"},"import/csv":{"id":"import/csv","title":"CSV","description":"To import a large amount of data you can a CSV or JSON file. In the sidemenu click on Importers and create a new importer. Enter a name of the importer and past the contents of the CSV in the data window. It is also possible to automatically load a CSV file via HTTP or SSH as will be discussed later.","sidebar":"defaultSidebar"},"import/http":{"id":"import/http","title":"HTTP","description":"Instead of entering data via copy and paste into the data window you can also automatically import data via HTTP or HTTPS. To set up an automatic import you first need to specify a data source. When the importers runs the data is collected and you can then process the CSV or JSON by adding entries for mapping objects and keys to topics.","sidebar":"defaultSidebar"},"import/json":{"id":"import/json","title":"JSON","description":"JSON is the most widely used format for data exchange. Importing JSON works similarly to CSV, except that JSON data can be nested into a hierarchy. The keys in the JSON file correspond to the column headers in CSV.","sidebar":"defaultSidebar"},"import/mqtt":{"id":"import/mqtt","title":"MQTT","description":"MQTT is a lightweight protocol for publishing and subscribing to messages. It is often used in IoT applications. The IoT devices publish their data to an MQTT server, which can be public or private. Importers subscribe to a topic defined in the datasource and when a message is received the content is stored on the server. The content, time and topic of the message can be imported with an importer at regular scheduled intervals, or immediately if data is received. By using an importer to pull MQTT data you can avoid system overload when MQTT devices publish information at a very high rate. When MQTT data is received the last value stored in the cache is updated so that the importer always reads the most recent value.","sidebar":"defaultSidebar"},"import/ssh":{"id":"import/ssh","title":"SSH","description":"SSH can be used to download a file from a server or to execute remote commands on a server, for example to get the current workload or disk usage. The authentication for the SSH connection are defined in a secret.","sidebar":"defaultSidebar"},"installation/backup":{"id":"installation/backup","title":"Backup","description":"All user data and documents are stored in a mongo database. The other components only store log files and configuration. Mongo provides an easy way to backup the information using the mongodump command. This also includes any documents and images. You can use a Kubernetes cron job to automatically dump the database at regular intervals. An alternative is to use a shell script and Linux cron job as described below.","sidebar":"defaultSidebar"},"installation/hardware":{"id":"installation/hardware","title":"Hardware","description":"The installation requires a dedicated server running Ubuntu Linux. The server may be a virtual machine running on VirtualBox, a dedicated Linux server, a Raspberry PI or a VM on Amazon, Azure or Google Cloud Platform.","sidebar":"defaultSidebar"},"installation/ingress":{"id":"installation/ingress","title":"External access via SSL","description":"Most web browsers and devices require a secure connection over https. You can setup secure access to your Kubernetes cluster using an Kubernetes Ingress. Alternatively you can use Nginx or Apache.","sidebar":"defaultSidebar"},"installation/kubernetes":{"id":"installation/kubernetes","title":"Kubernetes","description":"All components of the system are implemented as microservices running in Docker containers. The advantage of using Docker containers is that that components can be written in any language, such as TypeScript, C++, Rust or Python. Also, the components can be run on any system such as a Raspberry PI, Mac, Windows, Linux or Cloud service.","sidebar":"defaultSidebar"},"installation/mqtt":{"id":"installation/mqtt","title":"MQTT","description":"MQTT is a lightweight protocol for sending IoT data and messages over the internet. It is a publish and subscribe protocol where a device publishes a message to a topic on an MQTT broker. Other clients can subscribe to the topic and receive updates. The concept of topics can be compared to channels on a radio.","sidebar":"defaultSidebar"},"installation/releases":{"id":"installation/releases","title":"Releases","description":"If you have a kubernetes installation running you can install and upgrade releases. The only mandatory components are the mongo database, the server and the web application. Other components such as for web crawling and for connecting to external services are optional and can be added in a later stage.","sidebar":"defaultSidebar"},"installation/troubleshooting":{"id":"installation/troubleshooting","title":"Trouble shooting","description":"Deployment of release fails","sidebar":"defaultSidebar"},"installation/zigbee":{"id":"installation/zigbee","title":"Zigbee","description":"Zigbee is a wireless communication protocol designed for use in low-power and low-data-rate applications such as home automation, wireless sensor networks, and personal area networks. One of the key features of Zigbee is its low power consumption, which makes it well-suited for use in battery-powered devices. Zigbee devices can run for several years on a single coin cell battery. Zigbee also has a mesh networking capability which allows devices to extend the network by relaying messages through intermediate devices. This allows for creating networks with a large number of devices and providing a reliable communication path even in the case of device failures.","sidebar":"defaultSidebar"},"installation/zwave":{"id":"installation/zwave","title":"Zwave","description":"Z-Wave is a wireless communications protocol used primarily for home automation. It is a mesh network using low-energy radio waves to communicate from appliance to appliance, allowing for wireless control of residential appliances and other devices, such as lighting control, security systems, thermostats, windows, locks, swimming pools, and garage door openers. For integration of Zwave you need a [Zwave USB stick] (https://aeotec.com/z-wave-usb-stick/index.html) and one or more devices. The advantage of Zwave compared to Wifi is larger distance and less power consumption. A Zwave sensor can run several years on a single battery.","sidebar":"defaultSidebar"},"integrations/arduino":{"id":"integrations/arduino","title":"Arduino - MQTT","description":"Arduino is an open-source electronics platform based on easy-to-use hardware and software. Arduino boards are able to read inputs - light on a sensor, a finger on a button, or a Twitter message - and turn it into an output - activating a motor, turning on an LED, publishing something online. In this tutorial we show how an Arduino MKR1000 can be used to collect temperature and humididy data and store the data on an SD card. When a WIFI connection is available the data is sent to an MQTT server. The Arduino integration uses the standard MQTT import module. The application that is running on the board is written in the Arduino C++ implementation.","sidebar":"defaultSidebar"},"integrations/concept":{"id":"integrations/concept","title":"Concept","description":"Simple integrations can be created as discussed in the importer section. You can make more complex integrations that include complex authentication, custom data processing or invokation of other web services. These integrations can be created with JavaScript or by creating a web service that supports a standard API. When the web service is deployed on the Kubernetes cluster it can be used by importers and automations.","sidebar":"defaultSidebar"},"integrations/counter":{"id":"integrations/counter","title":"People counter","description":"People counter is a microservice that takes a URL with image in JPG or PNG format and returns the number of people in the image. This service can be used to process images from a web cam to monitor waiting lines or occupancy of a room. To use the service in a real invironment you need to setup a web cam that can expose a PNG or JPG image as a URL. A standard importer can the be used to call the counting service with this URL as described below. The counted number of people can be used to analyze trends over time or to trigger a notification if an area becomes too crowded.","sidebar":"defaultSidebar"},"integrations/crawler":{"id":"integrations/crawler","title":"Crawler","description":"For static web sites you can use a HTTP request to get the page content in HTML and then use JavaScript to extract the information. Most websites use JavaScript to dynamically create HTML and on those sites this approach does not work. This integration uses the Google Puppeteer library for Node to emulate a web driver with JavaScript support.","sidebar":"defaultSidebar"},"integrations/esp32":{"id":"integrations/esp32","title":"ESP32 - GPS Tracker","description":"ESP32 is a series of low-cost and low-power microcontrollers with integrated Wi-Fi and dual-mode Bluetooth. In this integration we create a GSP tracker with onboard data caching and synchronization via Wi-Fi. This provides a low cost alternative to using a 4G network for streaming real-time data. As soon as the ESP is powered, for example by starting a vehicle, the location, speed and heading data is cached on the SD card. When the vehicle is within reach of the configured Wi-Fi access point the data is synchronized with the server.","sidebar":"defaultSidebar"},"integrations/fritzbox":{"id":"integrations/fritzbox","title":"Fritzbox","description":"A router can be used to detect if somebody is present at a location with a WIFI network. The Fritzbox integration connects to the router and retreives a list of devices that are connected. You can use this integration to show a screen at the office that automatically shows who is present based on the WIFI connection of their phone. This may help to comply to legal requirements in some buildings that mandate that at all times a list of all persons in the building should be maintained. The information about presence can also be used to automatically turn on heating, cooling, lights and other devices based on current building occupancy.","sidebar":"defaultSidebar"},"integrations/homeassistant":{"id":"integrations/homeassistant","title":"Home Assistant","description":"Home Assistant is an open source platform for home automation. It provides integrations with many devices and supports a Home Assistent Rest API for reading and setting parameters.","sidebar":"defaultSidebar"},"integrations/mqtt":{"id":"integrations/mqtt","title":"MQTT","description":"MQTT (Message Queuing Telemetry Transport) is a lightweight, publish-subscribe network protocol that is designed for sending data from Internet of Things (IoT) devices. It is particularly well-suited for communication between devices with limited resources, such as microcontrollers, sensors, and embedded systems. The MQTT integration uses a combination of push and pull. When data is published by a device the last received data is stored. This can either be imported immediately or it can be imported at scheduled times.","sidebar":"defaultSidebar"},"integrations/nefit":{"id":"integrations/nefit","title":"Nefit","description":"Nefit is a subsidiary of Bosch and provides HVAC (heating ventilation airconditioning) devices. The devices can be controlled with an app and there is also a API available.","sidebar":"defaultSidebar"},"integrations/openweather":{"id":"integrations/openweather","title":"OpenWeather","description":"Weather information can be used for analysis and predication purposes or to control devices. OpenWeather is a free weather service which provides current weather and forecast for all locations. This integration used the standard importer in combination with a JavaScript class for retrieving and parsing the weather information. The weather information also includes the sunrise and sunset for the date and location. This can be used to control lights.","sidebar":"defaultSidebar"},"integrations/smartmeter":{"id":"integrations/smartmeter","title":"Smart meter","description":"Smart meter is a device that can be connected to your gas and electricity meter. It gives real-time feedback on gas and electricity usage. You can use the smart meter to monitor energy use over time and trigger alerts in case of access use.","sidebar":"defaultSidebar"},"integrations/solaredge":{"id":"integrations/solaredge","title":"SolarEdge","description":"SolarEdge is a provider of three phase inverters to convert power from solar panels to alternating current. SolarEdge supports a app where you can view current power and history and they also support an API. The connection can be setup with a single API call. You can use the information from the inverter to read the current power and use this information to start charging an electric vehicle.","sidebar":"defaultSidebar"},"integrations/tesla":{"id":"integrations/tesla","title":"Tesla","description":"Tesla car owners can access their car via the Tesla app, for example to open doors, set the temperature or start charging. There is unoffical API that is used by the Android and IOS apps. The Tesla integration allows you to read all information from a car and send commands such as turning on the climate or start charging. With the integration of the Tesla API you can implement an intelligent charging system that starts charging when you have enough power from solar panels.","sidebar":"defaultSidebar"},"integrations/tuya":{"id":"integrations/tuya","title":"Tuya","description":"Tuya is a provider of smart devices such as LED lamps, power switches and other devices. These devices can be controlled by a Tuya app but Tuya also supports an API for controlling these devices by other applications. The Tuya integration is a bi-directional integration allowing you to read values from sensors and controls switches and lights. The integration is implemented as a Docker web service and uses the open source @tuya/tuya-connector-nodejs package.","sidebar":"defaultSidebar"},"integrations/zwave":{"id":"integrations/zwave","title":"Zwave","description":"This integration uses a script for subscribing and publishing to an MQTT server connected to the Zwave2Mqtt bridge. The integration is bi-directional, which means you can read values but also set values, for example to turn on a switch. The example below shows the integration of two Zwave power switches and a Philio Technology multi-sensor for temperature, luminance and motion detection.","sidebar":"defaultSidebar"},"monitoring/compliance":{"id":"monitoring/compliance","title":"Assertions","description":"The purpose of monitoring is to enforce compliance to a contract or service level agreements (SLAs). For example, an SLA may describe that the temperature in certain locations should be between 18 and 22 degrees celcius during business hours. The difference between monitoring and automation is that automation is used to control devices. Monitoring only checks is measurements are between certain values and has less implication in case of configuration errors. Automation and monitoring are complementary because automation can be used to make sure that certain conditions are met, for example temperature or humidity, by controlling devices. Monitoring checks if the automation is effective.","sidebar":"defaultSidebar"},"monitoring/notifications":{"id":"monitoring/notifications","title":"Notifications","description":"By default notifications are sent to the system administator. You can also log notifications in the database for futher processing and analysis.","sidebar":"defaultSidebar"},"monitoring/updated":{"id":"monitoring/updated","title":"Dead sensor detection","description":"A precondition for effective monitoring is to ensure that sensor data is actually received. The sensor data is obtained via connectors that can pull data via REST or process MQTT push messages. If for some reason the connection fails the current state is not updated and monitoring will not be correct. Every time a topic value is updated the time and location of the topic are updated as well. This information can be used to check when data was updated last.","sidebar":"defaultSidebar"},"reference/forms":{"id":"reference/forms","title":"Form controls","description":"Forms can be specified by entering fields in the form designer or by creating a text file. The format of the text file is designed so that the minimum input is required. The advantage of using a textual specification is that you can quickly create and edit forms using copy-paste or even automatically create forms using a computer program that can write text files. It is also easy to keep track of changes and version by using a version control system.","sidebar":"defaultSidebar"},"reference/javascript":{"id":"reference/javascript","title":"JavaScript","description":"All standard JavaScript functions and ECMAScript language constructs are supported. The scripts are executed in a sandbox Virtual Machine and do not have access to the operating system or Node.js packages. The following packages are supported. All values are returned as promises and can be obtained using the await statement. When the functions are used in importers the await is automatically included.","sidebar":"defaultSidebar"},"reference/markdown":{"id":"reference/markdown","title":"Markdown","description":"Markdown is a simple and easy to use markup language for format documents. The key concept is making the syntax for formatting as simple as possible and make the the unformatted text easy to read.","sidebar":"defaultSidebar"},"reference/topics":{"id":"reference/topics","title":"Special topics","description":"Field|Format| Description","sidebar":"defaultSidebar"},"reference/variables":{"id":"reference/variables","title":"Form variables","description":"The following variables can be used in formulas for setting the value of a form field. Some variables are only available in a context. For example, to get the latitude the user has to approve the browser or app to use the location services. A form score is only set if there are multiple choices options with values.","sidebar":"defaultSidebar"},"solids/boolean":{"id":"solids/boolean","title":"Boolean","description":"The Advanced mode includes the boolean add, subtract, and intersect operations. The example below shows how you can make a dice from a block and a sphere. The sphere is slightly bigger than the block and moved up a bit so that it partly sticks out the cube. The middle object shows what happens if you subtract the sphere from the block. The object in the front shows the result of the intersect operation: a cube with rounded corners, which looks like a dice. As you can see, Boolean operations are a very powerful tool to make complex objects from simple shapes.","sidebar":"defaultSidebar"},"solids/expressions":{"id":"solids/expressions","title":"Expressions","description":"In addition to parameter, which defines the variables for a part, you can also use variable. A variable is only used inside a part and are not exposed outside. Parameters are similar to arguments in functions in programming languages and variables are internal variables.  In the object below we define a variable b to set the size of a leaf. The variable is defined by an expression that includes a random fraction function, wich can be found under the math menu. A random fraction is a number between 0 and 1 like 0.12345. The random fraction is multiplied by 5 and then 4 is added. This means that the size of the leaf, variable b will always between 4 and 9. The leaf itself is create from a sphere that is scaled 0.5 in X-direction to make it a bit flat. It is scaled in Z-direction to make it long. Another random expression is used to set a random turn around the Y-axis and Z-axis.","sidebar":"defaultSidebar"},"solids/extrude":{"id":"solids/extrude","title":"Extrude","description":"In addition to the basic shapes like a Block or Cylinder the Advanced mode also supports extrude operations.  The extrude operation generates a shape by extruding a 2D profile along the Z-axis. To create an extrude select the block from the objects menu and add three or more points from the transformations menu. Then enter the height of the extrusion. The profile below is created by subtracting an array of cylinders from an extrusion.","sidebar":"defaultSidebar"},"solids/hull":{"id":"solids/hull","title":"Hull","description":"The hull operation creates a shrink-wrapped shape, called a convex hull, around a set of objects. To create the hull drag the hull statement from the combine menu and add a set of objects and transformations.","sidebar":"defaultSidebar"},"solids/parts":{"id":"solids/parts","title":"Parts","description":"Parts are objects with a name that can be included in other objects. The can be compared to functions in programming langanges. Like functions, parts can have zero or more parameters. The shape below is a simple example of chair that has no parameters. When the design is completed the name is set to Chair and you go back to the main gallery by clicking on <.","sidebar":"defaultSidebar"},"solids/primitives":{"id":"solids/primitives","title":"Primitives","description":"To create a equiment and installations for a digital twin you can either import an existing model from a CAD or BIM system, or you can create a model from scratch by using the solid modeler. With the solid modeler, you can create complex objects and parts by dragging blocks that represent 3D objects and transformations. To create a new solid select the menu option Solids and select the Advanced mode.  In the Advanced mode, you can set the color and material of primitives.","sidebar":"defaultSidebar"},"solids/repetition":{"id":"solids/repetition","title":"Repetition","description":"The Advanced mode has programming blocks for quickly repeating objects in a linear or ciculular pattern. The turn block below creates a circular pattern by rotating a set of objects along an axis. In this case we specified that there should be 12 repetitions each 30 degrees apart and with a radius of 50 along the Z axis.","sidebar":"defaultSidebar"},"solids/sweep":{"id":"solids/sweep","title":"Sweep","description":"The sweep object rotates a linear profile along the X-axis. The profiles is defined by a set of 2D points in the XY-plane. The 2D point block is under the transformations menu. The advanced mode also has some extra blocks for defining material properties such as transparency, shininess and emission. The transparent table is created by subtracting two blocks and adding a transparent block at the bottom.","sidebar":"defaultSidebar"},"solids/transformation":{"id":"solids/transformation","title":"Transform","description":"You can apply transformations to a group of objects by dragging the objects inside the move or rotate statement. This means that the transformations are only applied to the objects inside the block. For example, the cylinder below is rotated 90 degrees around the X-axis but the global transformation is not changed. The Advanced mode also supports the scale transformation. This can be used to squeeze or stretch an object in one or more directions. For example, the object below includes a cylinder and a sphere which is stretched along the Y-axis by a scale operation in Y-direction.","sidebar":"defaultSidebar"},"solids/tube":{"id":"solids/tube","title":"Tube","description":"The Tube shape takes a set of 3D point statements that define the trajectory and a diameter that specifies the size of the tube. The 3D point statement can be dragged from the transformations menu. Tubes can be used to model cables, pipes and handles. The power socket at the end of the cable is created by intersecting a cube and a cylinder.","sidebar":"defaultSidebar"},"technology/architecture":{"id":"technology/architecture","title":"Architecture","description":"The environment is designed to run on low-cost ARM hardware such as Raspberry PI or Odroid and on cloud platforms such as AWS or Google Cloud Platform. All frontend and backend modules are implemented as Docker containers running in a Kubernetes environment. Helm is used to facilitate easy installation and automatic rolling upgrades without downtime.","sidebar":"defaultSidebar"},"technology/stack":{"id":"technology/stack","title":"Software stack","description":"TypeScript is used because the asynchronous functionality is very suited for IO-intensive scalable applications. TypeScript also has the benefit of offering a single language and environment for the front end and back end.","sidebar":"defaultSidebar"},"tutorial/documents":{"id":"tutorial/documents","title":"Documents","description":"The value of a topic can be a document, such as a PDF or an image. This can be used to store information such as instruction manuals, photos, 3D models and structured text. There are built-in viewers for JPG, PNG, PDF, MARKDOWN and GLTF.","sidebar":"defaultSidebar"},"tutorial/location":{"id":"tutorial/location","title":"Location","description":"In addition to storing the time of change, also the location where the change happened is stored. The location is stored in worldwide GPS coordinates. The combination of time and location is called spacetime. It contains all information on when and where information has changed.","sidebar":"defaultSidebar"},"tutorial/registration":{"id":"tutorial/registration","title":"Registration","description":"After the installation you can register yourself as a user. Open a web browser to http://app.localhost and click on the register button. Enter the registration information and click Register. If the registration is succesful you are redirected to the login page. Enter the user name and password and click Login.","sidebar":"defaultSidebar"},"tutorial/time":{"id":"tutorial/time","title":"Time","description":"When the value of a topic is set a new entry in the log is created. This log allows you to track the changes over time, detect anomalies, perform statistical analysis and forecast future values.","sidebar":"defaultSidebar"},"tutorial/topic":{"id":"tutorial/topic","title":"Topic","description":"All information is stored in a \'topics\'. A topic has a name, a value and an optional unit. The name of the topic may include one or more \'.\' to group topics that belong to the same object. An object can be anything such as a person, a property, a location or an asset. The value of a topic can be a number, a text, a document or an image. Some values like a serial number may be static and need to be entered once. Other topics like temperature or pressure may change over time and can be changed manually or automatically. The idea behind topics is that all static and dynamic life cycle information can be store in a uniform way. The structure of topics and subtopics can be compared to organizing documents in folders and subfolders.  For example:","sidebar":"defaultSidebar"},"tutorial/ui":{"id":"tutorial/ui","title":"User interface","description":"The user interface of the app is automatically adjusted to screen size and application area. The overall concept is to keep the interface as simple as possible and only add more views and items for complex tasks and when a large screen is selected. The user interface is based on the Material Design concept.","sidebar":"defaultSidebar"},"visualization/animations":{"id":"visualization/animations","title":"Animation","description":"So far we have seen how we can set the shape and geometry of 3D objects based on IoT parameters. In this example, we use the built-in animation capabilities to create a rotating windmill on a 3D map. The direction of the windmill and rotation speed are based on real-time weather parameters.","sidebar":"defaultSidebar"},"visualization/color":{"id":"visualization/color","title":"Fixed color","description":"With dynamic coloring, we convert the values in the topics to a color and then apply to color to elements in the model. For example, you can show all rooms that are occupied in red or show the temperature inside a room with colors from blue to red.  To connect the topics to the 3D model we need to specify the name of the 3D model and the node in the 3D model to which the value applies. The model is a GLTF file that is either created with the built-in modeler or can be imported from CAD software such as Blender.","sidebar":"defaultSidebar"},"visualization/colormap":{"id":"visualization/colormap","title":"Dynamic coloring","description":"Instead of using a JavaScript expression that defines the color we can also use a color table defined in a form. The advantage of this method is that we can dynamically switch between various parameters defined in the form. In this example, we have a form that displays the temperature and humidity of an area.","sidebar":"defaultSidebar"},"visualization/concept":{"id":"visualization/concept","title":"GLTF Rewriting","description":"IoT data from sensors, devices, or humans is acquired via MQTT, REST, or manual import of JSON or CSV files. If necessary the values are transformed by the connector. For example, temperatures in Fahrenheit may be converted to Celcius, or numerical values may be translated into text.","sidebar":"defaultSidebar"},"visualization/lights":{"id":"visualization/lights","title":"Light","description":"In this example, we show how you can visualize IoT parameters by setting the intensity and color of lights. You can use this to visualize traffic signs in a smart city or show warning signs.","sidebar":"defaultSidebar"},"visualization/location":{"id":"visualization/location","title":"Location","description":"In many cases specifying the position or orientation of components as numbers in 3D space is not user-friendly. For example, in a digital twin of a parking garage, it is more convenient to specify the location of a vehicle by a symbolic code like A23 instead of XYZ-coordinates in 3D space.","sidebar":"defaultSidebar"},"visualization/position":{"id":"visualization/position","title":"Position","description":"When creating a digital twin you often start with a basic structure, such as a building or an industrial facility. You can then progressively add components such as equipment, furniture, or installations. Each component in the digital twin can be represented by a GLTF file and a transformation that specifies its position and orientation.","sidebar":"defaultSidebar"},"visualization/scaling":{"id":"visualization/scaling","title":"Scaling","description":"In this example, we show how you can apply a scaling transformation to visualize the energy state of a battery in a 3D model. Instead of creating a new model from scratch, we show how you can use a model that has been created in other software and imported as a binary GLTF model.","sidebar":"defaultSidebar"},"visualization/transformation":{"id":"visualization/transformation","title":"Transformation","description":"In this section, we explain how you can apply transformations to 3D objects and how you can use expressions to implement geometric constraints between nodes in a GLTF model.  Transformations on 3D objects can be used to visualize the state of an object depending on IoT parameters. For example, you can show the location of an elevator in a building or the position of the arm of a robot in a factory.","sidebar":"defaultSidebar"}}}')}}]);