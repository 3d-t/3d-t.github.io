"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6463],{15680:(e,t,n)=>{n.d(t,{xA:()=>d,yg:()=>h});var o=n(96540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=p(n),u=r,h=s["".concat(c,".").concat(u)]||s[u]||m[u]||i;return n?o.createElement(h,a(a({ref:t},d),{},{components:n})):o.createElement(h,a({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[s]="string"==typeof e?e:r,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4414:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var o=n(58168),r=(n(96540),n(15680));const i={sidebar_position:20},a="Color",l={unversionedId:"visualization/color",id:"visualization/color",title:"Color",description:"With dynamic coloring, we convert the values in the topics to a color and then apply to color to elements in the model. For example, you can show all rooms that are occupied in red or show the temperature inside a room with colors from blue to red.  To connect the topics to the 3D model we need to specify the name of the 3D model and the node in the 3D model to which the value applies. The model is a GLTF file that is either created with the built-in modeler or can be imported from CAD software such as Blender.",source:"@site/docs/visualization/color.md",sourceDirName:"visualization",slug:"/visualization/color",permalink:"/docs/visualization/color",draft:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"defaultSidebar",previous:{title:"Visualization",permalink:"/docs/visualization/concept"},next:{title:"Light",permalink:"/docs/visualization/lights"}},c={},p=[{value:"Topics",id:"topics",level:2},{value:"Form",id:"form",level:2},{value:"Model",id:"model",level:2},{value:"Explanation",id:"explanation",level:2}],d={toc:p},s="wrapper";function m(e){let{components:t,...i}=e;return(0,r.yg)(s,(0,o.A)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"color"},"Color"),(0,r.yg)("p",null,"With dynamic coloring, we convert the values in the topics to a color and then apply to color to elements in the model. For example, you can show all rooms that are ",(0,r.yg)("inlineCode",{parentName:"p"},"occupied")," in ",(0,r.yg)("inlineCode",{parentName:"p"},"red")," or show the temperature inside a room with colors from blue to red.  To connect the topics to the 3D model we need to specify the name of the 3D model and the node in the 3D model to which the value applies. The model is a GLTF file that is either created with the built-in modeler or can be imported from CAD software such as Blender. "),(0,r.yg)("h2",{id:"topics"},"Topics"),(0,r.yg)("p",null,"The topics can be imported from a file or created manually.  You need to specify the name of the model in a topic that ends with ",(0,r.yg)("inlineCode",{parentName:"p"},"geometry"),". All subtopics will automatically inherit the reference to the model. For each area we want to visualize we need to add a topic that ends with ",(0,r.yg)("inlineCode",{parentName:"p"},"node")," and enter the name of the node in the model that represents the building element that needs to be colored. In this case, we will use the nodes whose name includes ",(0,r.yg)("inlineCode",{parentName:"p"},"IfcSpace"),".    "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"site.B01.geometry = Building.gltf\nsite.B01.area_1_a_Living.temperature = 22\nsite.B01.area_1_a_Living.humidity = 66\nsite.B01.area_1_a_Living.node = IcfSpace_1_a_Unit_Living\nsite.B01.area_1_b_Living.temperature = 25\nsite.B01.area_1_b_Living.humidity = 30\nsite.B01.area_1_b_Living.node = IcfSpace_1_b_Unit_Living\n")),(0,r.yg)("h2",{id:"form"},"Form"),(0,r.yg)("p",null,"Create a new form and include two controls for ",(0,r.yg)("inlineCode",{parentName:"p"},"temperature")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"humidity"),". In the form, you specify how the values are mapped to color names. For example, in the form below a temperature of 15 degrees is converted to ",(0,r.yg)("inlineCode",{parentName:"p"},"blue"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"Apartment Room\n\nReference\n|6\n\nName\n|6\n\nTemperature\n[0|18:blue,18|21:green,21|24:orange,24|30:red 00]\n\nHumidity\n[0|50:grey,70|100:blue 00]\n\nVolume\n[0.00 m3]\n\nArea\n[0.00 m2]\n")),(0,r.yg)("h2",{id:"model"},"Model"),(0,r.yg)("p",null,"Create a new model and specify the topics you want to visualize, for example, ",(0,r.yg)("inlineCode",{parentName:"p"},"site."),"B01`.  All subtopics that contain the references to the geometry and nodes are included. Now select the form you want to use for visualization and select one of the parameters in the form. If you change the parameter, the model is automatically updated. If you click on one of the areas in the model the form that shows the parameters of that area is opened."),(0,r.yg)("p",null,(0,r.yg)("img",{src:n(73744).A,width:"1200",height:"750"})),(0,r.yg)("p",null,"You can now change the coloring scheme by selecting another parameter from the drop-down menu. In this case, we select the parameter ",(0,r.yg)("inlineCode",{parentName:"p"},"Humidity"),". The areas are now colored according to the current value of the ",(0,r.yg)("inlineCode",{parentName:"p"},"Humidity")," subtopics of the area and the color ranges defined for the humidity parameter. You can select any parameter defined in the form that has a numerical value and a color mapping."),(0,r.yg)("p",null,(0,r.yg)("img",{src:n(1439).A,width:"1200",height:"750"})),(0,r.yg)("h2",{id:"explanation"},"Explanation"),(0,r.yg)("p",null,"To apply dynamic coloring the topics are connected to the GLTF model and the nodes in the model. The ",(0,r.yg)("inlineCode",{parentName:"p"},"geometry")," subtopic defines the name of the model and the ",(0,r.yg)("inlineCode",{parentName:"p"},"node")," subtopic defines the name of the node. You can then specify the subtopics that you want to visualize. For example, occupancy, CO2 level, or temperature. The parameter values are converted to colors by using a form that includes color mapping."),(0,r.yg)("mermaid",{value:"flowchart \n    direction RL\n    subgraph Topics\n        Parent[building.b01]\n        Topic[unit_1_a]\n        Geometry[.geometry \\n A.gltf]\n        Temperature[.temperature\\n22 C]\n        Humidity[.humidity\\n 66%]\n        Node[.node \\n1_A]\n        Parent --\x3e Topic\n        Parent --\x3e Geometry\n        Topic --\x3e Node\n        Topic --\x3e Temperature\n        Topic --\x3e Humidity\n    end\n    subgraph GLTF\n        Building[Building \\nA] --\x3e Storey[Storey \\n1]\n        Storey --\x3e Unit[Unit \\n1_A]\n        Storey --\x3e UnitB[Unit \\n1_B]\n        Unit --\x3e Space\n        Unit --\x3e Wall\n        Unit --\x3e Slab\n    end\n    Node --\x3e Space\n    Temperature --Color mapping--\x3e Space\n    Humidity --Color mapping--\x3e Space\n    Geometry --\x3e Building\n    style Parent fill:#fcc\n    style Topic fill:#fcc\n    style Geometry fill:#fcc\n    style Node fill:#fcc\n    style Temperature fill:#fcc\n    style Humidity fill:#fcc"}))}m.isMDXComponent=!0},1439:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/building_humidity-53673727e0b6fc5faff06aa0ce227276.png"},73744:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/building_temperature-f6b43ba8e1fa75f89dd2961f24e96473.png"}}]);