"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8889],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>f});var o=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=o.createContext({}),d=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=d(e.components);return o.createElement(c.Provider,{value:t},e.children)},l="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),l=d(n),m=a,f=l["".concat(c,".").concat(m)]||l[m]||u[m]||i;return n?o.createElement(f,r(r({ref:t},p),{},{components:n})):o.createElement(f,r({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[l]="string"==typeof e?e:a,r[1]=s;for(var d=2;d<i;d++)r[d]=n[d];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},52622:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var o=n(58168),a=(n(96540),n(15680));const i={sidebar_position:20},r="Dead sensor detection",s={unversionedId:"monitoring/updated",id:"monitoring/updated",title:"Dead sensor detection",description:"A precondition for effective monitoring is to ensure that sensor data is actually received. The sensor data is obtained via connectors that can pull data via REST or process MQTT push messages. If for some reason the connection fails the current state is not updated and monitoring will not be correct. Every time a topic value is updated the time and location of the topic are updated as well. This information can be used to check when data was updated last.",source:"@site/docs/monitoring/updated.md",sourceDirName:"monitoring",slug:"/monitoring/updated",permalink:"/docs/monitoring/updated",draft:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"defaultSidebar",previous:{title:"Assertions",permalink:"/docs/monitoring/compliance"},next:{title:"Notifications",permalink:"/docs/monitoring/notifications"}},c={},d=[{value:"Assert updated",id:"assert-updated",level:2},{value:"Wildcards",id:"wildcards",level:2}],p={toc:d},l="wrapper";function u(e){let{components:t,...i}=e;return(0,a.yg)(l,(0,o.A)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"dead-sensor-detection"},"Dead sensor detection"),(0,a.yg)("p",null,"A precondition for effective monitoring is to ensure that sensor data is actually received. The sensor data is obtained via connectors that can pull data via REST or process MQTT push messages. If for some reason the connection fails the current state is not updated and monitoring will not be correct. Every time a topic value is updated the time and location of the topic are updated as well. This information can be used to check when data was updated last."),(0,a.yg)("h2",{id:"assert-updated"},"Assert updated"),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"Asset updated")," block has one input for the name of the topic and one input for a date and time. Instead of using a fixed date you can use the running date control found in the ",(0,a.yg)("inlineCode",{parentName:"p"},"Variables")," section. For example, to check the update time of all weather topics you can drag a loop block with variable ",(0,a.yg)("inlineCode",{parentName:"p"},"topic")," and pass the ",(0,a.yg)("inlineCode",{parentName:"p"},"topic")," to the ",(0,a.yg)("inlineCode",{parentName:"p"},"Assert updated")," block. The time control specifies the maximum age of the topic state, in this case ",(0,a.yg)("inlineCode",{parentName:"p"},"3 hours"),".\n",(0,a.yg)("img",{src:n(79356).A,width:"2732",height:"952"})),(0,a.yg)("h2",{id:"wildcards"},"Wildcards"),(0,a.yg)("p",null,"Using a loop to iterate over topics makes it possible to add ",(0,a.yg)("inlineCode",{parentName:"p"},"If")," statements. You can for instance add a conditional statement in the loop that checks if the name of the topic includes something like ",(0,a.yg)("inlineCode",{parentName:"p"},"server")," and based on that specify a diffent value that with a topic that includes ",(0,a.yg)("inlineCode",{parentName:"p"},"notebook"),". If all topics need to comply to the same value you can use a wildcard."),(0,a.yg)("p",null,(0,a.yg)("img",{src:n(66828).A,width:"2732",height:"752"})))}u.isMDXComponent=!0},79356:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/monitoring_update_loop-d48c875c3e181e628573f56a06335f68.png"},66828:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/monitoring_update_wildcard-1b977a16dc434f94417b9ae50bc72ee3.png"}}]);