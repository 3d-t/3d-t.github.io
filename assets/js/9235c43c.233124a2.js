(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6445],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(n),d=r,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},8947:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:8},l="Zwave",c={unversionedId:"integrations/zwave",id:"integrations/zwave",isDocsHomePage:!1,title:"Zwave",description:"Z-Wave is a wireless communications protocol used primarily for home automation. It is a mesh network using low-energy radio waves to communicate from appliance to appliance, allowing for wireless control of residential appliances and other devices, such as lighting control, security systems, thermostats, windows, locks, swimming pools, and garage door openers. For integration of Zwave you need a [Zwave USB stick] (https://aeotec.com/z-wave-usb-stick/index.html) and one or more devices. The advantage of Zwave compared to Wifi is larger distance and less power consumption. A Zwave sensor can run several years on a single battery.",source:"@site/docs/integrations/zwave.md",sourceDirName:"integrations",slug:"/integrations/zwave",permalink:"/docs/integrations/zwave",version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"defaultSidebar",previous:{title:"Openweather",permalink:"/docs/integrations/openweather"},next:{title:"Tesla",permalink:"/docs/integrations/tesla"}},p=[{value:"Zwave2MQTT",id:"zwave2mqtt",children:[]},{value:"Secret",id:"secret",children:[]},{value:"Importer",id:"importer",children:[]},{value:"Exporter",id:"exporter",children:[]}],m={toc:p};function u(e){var t=e.components,s=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"zwave"},"Zwave"),(0,o.kt)("p",null,"Z-Wave is a wireless communications protocol used primarily for home automation. It is a mesh network using low-energy radio waves to communicate from appliance to appliance, allowing for wireless control of residential appliances and other devices, such as lighting control, security systems, thermostats, windows, locks, swimming pools, and garage door openers. For integration of Zwave you need a ","[Zwave USB stick]"," (",(0,o.kt)("a",{parentName:"p",href:"https://aeotec.com/z-wave-usb-stick/index.html"},"https://aeotec.com/z-wave-usb-stick/index.html"),") and one or more devices. The advantage of Zwave compared to Wifi is larger distance and less power consumption. A Zwave sensor can run several years on a single battery."),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Stick"),(0,o.kt)("th",{parentName:"tr",align:null},"Sensor"),(0,o.kt)("th",{parentName:"tr",align:null},"Plug"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("img",{src:n(3291).Z})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("img",{src:n(4047).Z})),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("img",{src:n(8060).Z}))))),(0,o.kt)("h2",{id:"zwave2mqtt"},"Zwave2MQTT"),(0,o.kt)("p",null,"For integration of Zwave connect the stick to a USB port and check the name of the device. On a Raspberry Pi this is ",(0,o.kt)("inlineCode",{parentName:"p"},"/dev/ttyACM0"),".  Follow the installation instructions for ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/OpenZWave/Zwave2Mqtt"},"zwave2mqtt")," or start a docker container:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"docker run -d -it -p 8091:8091 --device=/dev/ttyACM0 -v $(pwd)/store:/usr/src/app/store robertslando/zwave2mqtt:latest\n")),(0,o.kt)("p",null,"Open a web browser and login:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"http://localhost:8091\n")),(0,o.kt)("p",null,"Go to the ",(0,o.kt)("inlineCode",{parentName:"p"},"settings")," section and enter the device ",(0,o.kt)("inlineCode",{parentName:"p"},"/dev/ttyACM0")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Zwave")," section. In the ",(0,o.kt)("inlineCode",{parentName:"p"},"Mqtt")," section enter the details of the MQTT host where the data should be sent to and select ",(0,o.kt)("inlineCode",{parentName:"p"},"retain"),". In the ",(0,o.kt)("inlineCode",{parentName:"p"},"Gateway")," section you can map the Zwave device information to MQTT topic."),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(2347).Z})),(0,o.kt)("p",null,"The raw MQTT data sent by the Zwave2MQTT service includes a topic and a JSON body with the time and a value:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"mosquitto_sub -h [HOSTNAME] -u [Username] -P [password] -v -t zwave/#\n\n")),(0,o.kt)("p",null,"The output looks as follows:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'zwave/office/printer/voltage {"time":1637850956331,"value":226.79}\nzwave/office/lamp/kwh {"time":1637851022338,"value":96.44}\nzwave/office/2/50/1/256 {"time":1637851022343,"value":false}\nzwave/office/pir/temperature {"time":1637850316964,"value":68}\nzwave/office/lamp/on {"time":1637851320475,"value":true}\nzwave/office/lamp/voltage {"time":1637851024324,"value":233.59}\n')),(0,o.kt)("h2",{id:"secret"},"Secret"),(0,o.kt)("p",null,"To connect with the Zwave platform create a new secret with the connection information of the MQTT server that is configured."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name: Zwave\nfields:\n  - name: mqtt\n    value: 3d-t.it\n  - name: port\n    value: 1883\n  - name: username\n    value: idata\n  - name: password\n    value: 5656ae\n  - name: topic\n    value: zwave\n")),(0,o.kt)("h2",{id:"importer"},"Importer"),(0,o.kt)("p",null,"In the importer enter a list of object and topics. The object is the name of the MQTT topic. In the mapping the value is read with the ",(0,o.kt)("inlineCode",{parentName:"p"},"mqtt")," function where the MQTT topic is passed as an argument. The ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," field of the message object is used to set the value of the topic. For the temperature an additional conversion from Fahrenheid to Celcius is included."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name: Zwave\ncontext: Zwave\ndata: `\n    object, topic\n    zwave/office/pir, office.pir`\nmappings:\n  - key: temperature\n    formula: '(mqtt.get(object + ''/temperature'').value-31)/1.8'\n  - key: lux\n    formula: 'mqtt.get(object + ''/illuminance'').value'\n  - key: security\n    formula: 'mqtt.get(object + ''/security'').value'\n")),(0,o.kt)("p",null,"The example below shows the mapping for a power switch: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name: 'MQTT Zwave'\ncontext: Zwave\ndata: `\nobject, topic\nzwave/office/printer/on, office.printer\nzwave/office/lamp/on, office.lamp\n`\nmappings:\n  - key: on\n    formula: 'mqtt.get(object).value ? 0 : 1'\n")),(0,o.kt)("h2",{id:"exporter"},"Exporter"),(0,o.kt)("p",null,"To control MQTT devices you can send messages with the ",(0,o.kt)("inlineCode",{parentName:"p"},"mqtt")," package. Create a new exporter with the same name as the importer and specify the same secret as the context. In the mappings the internal value for the with in the range of ",(0,o.kt)("inlineCode",{parentName:"p"},"0-1")," is converted to a JSON message body. The Zwave2MQTT broker uses a ",(0,o.kt)("inlineCode",{parentName:"p"},"set")," extension at the end of the topic to change a value. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"name: 'MQTT Zwave'\ncontext: Zwave\nmappings:\n  - key: on\n    formula: 'mqtt.publish(object + ''/set'', {value: on ? true : false}, context)'\n")),(0,o.kt)("p",null,"You can optionally include other MQTT publish parameters in the secret or create a new secret for the export. To change the quality of service and retain messages you can add the following fields to the ",(0,o.kt)("inlineCode",{parentName:"p"},"Zwave")," secret: "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"fields:\n  - name: retain\n    value: true\n  - name: qos\n    value: 1\n")),(0,o.kt)("p",null,"The mqtt functionality is implemented with the mqtt.js] package. For more information onoptions see ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/mqtt#publish"},"mqtt.js documentation")))}u.isMDXComponent=!0},4047:function(e,t,n){"use strict";t.Z=n.p+"assets/images/philio-47becd9449883e8bdcca3fa44cabe394.jpeg"},2347:function(e,t,n){"use strict";t.Z=n.p+"assets/images/zwave2mqtt-ecb9bd046f26eb84786d5d137a500a4f.png"},8060:function(e,t,n){"use strict";t.Z=n.p+"assets/images/zwaveplug-cabb1c86df7422e3c8d9ab4b5037688d.jpeg"},3291:function(e,t,n){"use strict";t.Z=n.p+"assets/images/zwavestick-015f04c0092943d61b97ed94e7149f79.jpeg"}}]);