"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4070],{15680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>y});var i=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},f=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),f=a,y=d["".concat(s,".").concat(f)]||d[f]||u[f]||o;return n?i.createElement(y,r(r({ref:t},p),{},{components:n})):i.createElement(y,r({ref:t},p))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=f;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:a,r[1]=l;for(var c=2;c<o;c++)r[c]=n[c];return i.createElement.apply(null,r)}return i.createElement.apply(null,n)}f.displayName="MDXCreateElement"},96050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=n(58168),a=(n(96540),n(15680));const o={sidebar_position:45},r="Position",l={unversionedId:"visualization/position",id:"visualization/position",title:"Position",description:"When creating a digital twin you often start with a basic structure, such as a building or an industrial facility. You can then progressively add components such as equipment, furniture, or installations. Each component in the digital twin can be represented by a GLTF file and a transformation that specifies its position and orientation.",source:"@site/docs/visualization/position.md",sourceDirName:"visualization",slug:"/visualization/position",permalink:"/docs/visualization/position",draft:!1,tags:[],version:"current",sidebarPosition:45,frontMatter:{sidebar_position:45},sidebar:"defaultSidebar",previous:{title:"Scaling",permalink:"/docs/visualization/scaling"},next:{title:"Location",permalink:"/docs/visualization/location"}},s={},c=[{value:"Solids",id:"solids",level:2},{value:"Topics",id:"topics",level:2},{value:"Model",id:"model",level:2},{value:"Explanation",id:"explanation",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...o}=e;return(0,a.yg)(d,(0,i.A)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"position"},"Position"),(0,a.yg)("p",null,"When creating a digital twin you often start with a basic structure, such as a building or an industrial facility. You can then progressively add components such as equipment, furniture, or installations. Each component in the digital twin can be represented by a GLTF file and a transformation that specifies its position and orientation."),(0,a.yg)("h2",{id:"solids"},"Solids"),(0,a.yg)("p",null,"This example shows how a model of a refinery is augmented with two valves. The ",(0,a.yg)("inlineCode",{parentName:"p"},"Refinery")," is a GLTF model that is purchased from ",(0,a.yg)("a",{parentName:"p",href:"https://sketchfab.com"},"Sketchfab"),", a repository of free and paid GTLF models. It is downloaded as a ",(0,a.yg)("inlineCode",{parentName:"p"},".glb")," file, which includes geometry and textures."),(0,a.yg)("p",null,(0,a.yg)("img",{src:n(32691).A,width:"1191",height:"797"})),(0,a.yg)("p",null,"The ",(0,a.yg)("inlineCode",{parentName:"p"},"Valve")," is created with the built-in solid modeler by combining a block, cylinder, and torus. After defining the object is it exported as ",(0,a.yg)("inlineCode",{parentName:"p"},"Valve.gltf"),"."),(0,a.yg)("p",null,(0,a.yg)("img",{src:n(10724).A,width:"1200",height:"750"})),(0,a.yg)("h2",{id:"topics"},"Topics"),(0,a.yg)("p",null,"The refinery digital twin is composed of a topic ",(0,a.yg)("inlineCode",{parentName:"p"},"refinery.structure"),", and ",(0,a.yg)("inlineCode",{parentName:"p"},"refinery.controls")," for the valves. The topic for the valves includes a ",(0,a.yg)("inlineCode",{parentName:"p"},"translation")," subtopic that specifies the xyz-position in 3D space. A ",(0,a.yg)("inlineCode",{parentName:"p"},"rotation")," subtopic specifies the orientation of the valve along the xyz-axis. Finally, a ",(0,a.yg)("inlineCode",{parentName:"p"},"scale")," subtopic is used to size the valve to match the dimensions of the refinery. "),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre"},"refinery.structure.geometry = Refinery.glb\n\nrefinery.controls.valve_01 = Valve.gltf\nrefinery.controls.valve_01.translation = 9, 5.8, 20\nrefinery.controls.valve_01.rotation = 0,90,0\nrefinery.controls.valve_01.scale = 8,8,8\n\nrefinery.controls.valve_02 = Valve.gltf\nrefinery.controls.valve_02.translation = 3, 5.8, 20\nrefinery.controls.valve_02.rotation = 0,90,0\nrefinery.controls.valve_02.scale = 8,8,8\n")),(0,a.yg)("h2",{id:"model"},"Model"),(0,a.yg)("p",null,"Create a new model and include the topics for the refinery and the valves. By including two different topics instead of the parent topic ",(0,a.yg)("inlineCode",{parentName:"p"},"refinery")," we can toggle the display of the refinery structure and the valves. To position the valve, you can click on the object in the 3D view and modify the values of the ",(0,a.yg)("inlineCode",{parentName:"p"},"translation")," and ",(0,a.yg)("inlineCode",{parentName:"p"},"orientation")," topics. "),(0,a.yg)("p",null,(0,a.yg)("img",{src:n(52198).A,width:"1200",height:"750"})),(0,a.yg)("p",null,"In this example, the ",(0,a.yg)("inlineCode",{parentName:"p"},"translation")," value of the valve is set only once and remains static. Of course, it is also possible to dynamically change the position of objects by real-time import of the translation coordinates. This can be used to visualize the position of moving vehicles or structures in the digital twin. It is important to understand that users to not have to use CAD software to make updates to the 3D model. The composition of the model is dynamically generated from the value of the topics in the database. They can automatically be imported from sensors, or specified manually by the user.  For example, if a certain area of the refinery is closed for maintenance, a user could manually specify the location of a fence that restricts the area."),(0,a.yg)("h2",{id:"explanation"},"Explanation"),(0,a.yg)("p",null,"The model is composed of three different components, each having a GLTF file. The two valves link to the same file but each generate a separate instance.  The topics for the structure and the two valves are linked to the GLTF as displayed below. The structure only has a geometry link to the GLTF file. The position and orientation of the two valves are controlled by subtopics."),(0,a.yg)("mermaid",{value:"flowchart \n    subgraph Topics\n    direction TB\n        Refinery\n        Refinery --\x3e Structure[Structure\\n]\n        Structure --\x3e Geometry\n        Refinery --\x3e Controls\n        Controls --\x3e Valve_01[Valve 01]\n        Controls --\x3e Valve_02[Valve 02]\n        Valve_01 --\x3e Geometry1[Geometry]\n        Valve_01 --\x3e Translation[Translation\\n9,5.8,20]\n        Valve_01 --\x3e Rotation[Rotation\\n-90,0,0]\n        Valve_02 --\x3e Geometry2[Geometry]\n        Valve_02 --\x3e Translation2[Translation\\n3,5.8,20]\n        Valve_02 --\x3e Rotation2[Rotation\\n0,90,0]\n    end\n    subgraph GLTF\n    direction TB\n        StructureGL[Refinery\\n Refinery.gltf]\n        Valve_01GL[Valve 01 \\n Valve.gltf]\n        Valve_02GL[Valve 02\\n Valve.gltf]\n    end\n    Geometry --\x3e StructureGL\n    Geometry1 --\x3e Valve_01GL\n    Geometry2 --\x3e Valve_02GL\n    Translation --\x3e Valve_01GL\n    Rotation --\x3e Valve_01GL\n    Translation2 --\x3e Valve_02GL\n    Rotation2 --\x3e Valve_02GL\n"}))}u.isMDXComponent=!0},32691:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/refinery-fdd449ea0fa1c58bbb2b931284437466.png"},52198:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/visualization_model_refinery-400ee14511f69b17df9ec9362cd47d34.png"},10724:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/visualization_solid_valve-0cdc76c791da5ecdce6f5a2150b17ee3.png"}}]);