"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[329],{15680:(e,t,a)=>{a.d(t,{xA:()=>l,yg:()=>u});var n=a(96540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),c=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},l=function(e){var t=c(e.components);return n.createElement(d.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),h=c(a),g=i,u=h["".concat(d,".").concat(g)]||h[g]||p[g]||r;return a?n.createElement(u,s(s({ref:t},l),{},{components:a})):n.createElement(u,s({ref:t},l))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=a.length,s=new Array(r);s[0]=g;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[h]="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=a[c];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},26874:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var n=a(58168),i=(a(96540),a(15680));const r={sidebar_position:5},s="Visual Mode",o={unversionedId:"drawings/visual",id:"drawings/visual",title:"Visual Mode",description:"IoT data in a digital twin can be displayed in dashboards with charts, graphs, gauges and other graphical elements. In this section we will show how to create more complex visualizations such as process diagrams, flow charts, and other graphical elements. The basis for displaying 2D graphics is the SVG file format.  SVG (Scalable Vector Graphics) is a vector graphics format that can be scaled to any size without losing quality. It is widely used for creating logos, icons, illustrations, and other graphics that need to be displayed at different sizes. It is supported by most modern web browsers and can be used to create interactive graphics such as maps, charts, and diagrams for displaying IoT data.",source:"@site/docs/drawings/visual.md",sourceDirName:"drawings",slug:"/drawings/visual",permalink:"/docs/drawings/visual",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Forecasting",permalink:"/docs/analysis/forecasting"},next:{title:"Text Mode",permalink:"/docs/drawings/text"}},d={},c=[{value:"Drawing",id:"drawing",level:2},{value:"SVG",id:"svg",level:2}],l={toc:c},h="wrapper";function p(e){let{components:t,...r}=e;return(0,i.yg)(h,(0,n.A)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"visual-mode"},"Visual Mode"),(0,i.yg)("p",null,"IoT data in a digital twin can be displayed in dashboards with charts, graphs, gauges and other graphical elements. In this section we will show how to create more complex visualizations such as process diagrams, flow charts, and other graphical elements. The basis for displaying 2D graphics is the SVG file format.  SVG (Scalable Vector Graphics) is a vector graphics format that can be scaled to any size without losing quality. It is widely used for creating logos, icons, illustrations, and other graphics that need to be displayed at different sizes. It is supported by most modern web browsers and can be used to create interactive graphics such as maps, charts, and diagrams for displaying IoT data."),(0,i.yg)("h2",{id:"drawing"},"Drawing"),(0,i.yg)("p",null,"You can use a visual programming environment to create parametric SVG drawings that are stored in a library on the server. Click on the ",(0,i.yg)("inlineCode",{parentName:"p"},"+")," button to create a new drawing and the select the option ",(0,i.yg)("inlineCode",{parentName:"p"},"Visual"),". This opens a workspace and a viewer for creating SVG elements. In this example we show the creation of a simple SVG graphic for a compass."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(10330).A,width:"1200",height:"750"}),"\nIn the workspace click on ",(0,i.yg)("inlineCode",{parentName:"p"},"+")," to show a menu with the available SVG elements, such as lines, rectangles, circles, etc. The elements can be dragged and dropped into the workspace to create the desired graphic. To move or rotate the elements, you can click and drag the transform statements."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(76024).A,width:"1200",height:"750"})),(0,i.yg)("p",null,"The basic shape of the compass is a circle with a thin and thick lines indicating the minutes. The lines are created inside a repeat statement where the angle is increased by 6 degrees. If the degrees are divisible by '5', the width of the line is thicker. The ",(0,i.yg)("inlineCode",{parentName:"p"},"text")," element is used to display the four directions on the compass."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(98912).A,width:"1200",height:"750"})),(0,i.yg)("p",null,"In this type of compass the line that indicates the direction always points upwards. The current direction is indicated by a textual representation and by rotating the graphics that shows the minutes. This rotation is done by inserting the elements that need to be rotated inside a ",(0,i.yg)("inlineCode",{parentName:"p"},"group")," block and adding a rotation inside the group. This way the rotation does not apply to the magenta line that shows the direction. To control the display of the direction a ",(0,i.yg)("inlineCode",{parentName:"p"},"parameter")," called ",(0,i.yg)("inlineCode",{parentName:"p"},"heading")," is added. This parameter can be provided as an argument when the drawing is created."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(77243).A,width:"1200",height:"950"})),(0,i.yg)("h2",{id:"svg"},"SVG"),(0,i.yg)("p",null,"After a drawing is created it can be used in a web page. The following example shows how to embed an SVG graphic that was created with the visual programming environment."),(0,i.yg)("p",null,"The page includes two instances of the same SVG graphic. The first instance only includes the name of the drawing. The second instance includes the name and a parameter for the heading. When no parameter is provided the default heading used in the script is used."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-html"},'<html>\n<body>\n<table>\n  <tr>\n    <td>\n      <img src="http://localhost:8010/drawings/svg/Compass" height="200">\n    </td>\n    <td>\n      <img src="http://localhost:8010/drawings/svg/Compass(130)" height="200">\n    </td>\n  </tr>\n</table>\n</body>\n</html>\n')),(0,i.yg)("p",null,"An example of the output is shown below. The HTML page with the embedded SVG graphic is opened in a standard web browser. There is no need for browser plugins or extensions, because the display of SVG is native to the browser.\nThe first image shows the default heading used in the script. The second image shows the heading parameter used in the script. In this example the heading parameters are hard coded into the script. In a real application the heading parameter would be provided by IoT parameters. This will be discussed in a later section."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(60362).A,width:"525",height:"225"})))}p.isMDXComponent=!0},98912:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/drawings_compass_1-3ecc638051bef986ad89508a29cedeb4.png"},77243:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/drawings_compass_2-e09a0152b4b89a3c6594171497ba0d00.png"},60362:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/drawings_compass_url-6d7d1e7436e25ca0d72a6abc1d375cf1.png"},10330:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/drawings_create-1b3998e51c76d8657f51d95a421defbb.png"},76024:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/drawings_svg_elements-71b9fb6a8584f16ef23cdfcdbfacc479.png"}}]);