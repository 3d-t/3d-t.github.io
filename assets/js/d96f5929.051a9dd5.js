(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3188],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,m=u["".concat(c,".").concat(h)]||u[h]||d[h]||i;return n?r.createElement(m,o(o({ref:t},l),{},{components:n})):r.createElement(m,o({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5808:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return l},default:function(){return u}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:1},c="Openweather",p={unversionedId:"integrations/openweather",id:"integrations/openweather",isDocsHomePage:!1,title:"Openweather",description:"Weather information can be used for analysis and predication purposes or to control devices. OpenWeather is a free weather service which provides current weather and forecast for all locations. This integration used the standard importer in combination with a JavaScript class for retrieving and parsing the weather information.",source:"@site/docs/integrations/openweather.md",sourceDirName:"integrations",slug:"/integrations/openweather",permalink:"/docs/integrations/openweather",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"SSH",permalink:"/docs/import/ssh"},next:{title:"Zwave",permalink:"/docs/integrations/zwave"}},l=[{value:"API key",id:"api-key",children:[]},{value:"Script",id:"script",children:[]},{value:"Secret",id:"secret",children:[]},{value:"Importer",id:"importer",children:[]}],d={toc:l};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"openweather"},"Openweather"),(0,i.kt)("p",null,"Weather information can be used for analysis and predication purposes or to control devices. OpenWeather is a free weather service which provides current weather and forecast for all locations. This integration used the standard importer in combination with a JavaScript class for retrieving and parsing the weather information."),(0,i.kt)("h2",{id:"api-key"},"API key"),(0,i.kt)("p",null,"OpenWeather is a free service but they require you to register and obtain a key.  Open a browser to ",(0,i.kt)("a",{parentName:"p",href:"https://openweathermap.org/api"},"https://openweathermap.org/api")," and subscibe to the free service and request an API key. The key looks like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"2a4232598d3a506c4d6c82c60c555c56\n")),(0,i.kt)("p",null,"This key needs to be included in every request to the API and is stored in a secret."),(0,i.kt)("h2",{id:"script"},"Script"),(0,i.kt)("p",null,"Create a new script with an ",(0,i.kt)("inlineCode",{parentName:"p"},"init")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," function. The script makes an HTTP request to the OpenWeather API and then converts the fields. The result includes a ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," field with holds an array of the locations and values.\nNote that the script includes a variables ",(0,i.kt)("inlineCode",{parentName:"p"},"Weather.context.APPID"),".  The reason for this is that you do not want to include a private API key in the script for security reasons and to make the script generic and independent of your specific key. As described below the value of this context variable is defined in a secret."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"class Weather {\n    static context = {}\n\n    static init = (context) => { Weather.context = context}\n\n    static get = async (object, key) => {\n        let location = object ? object : Weather.context.location\n        location = location.includes('.') ? location.replace('.', ',') : location \n        const url = 'https://api.openweathermap.org/data/2.5/weather?q=' + location + \"&APPID=\" + Weather.context.APPID;\n        let response = await http.get(url)\n        let data = response\n        var weather = {}\n        if (data) {\n            weather.temperature = Math.round(data.main.temp - 272.15)\n            weather.windchill = Math.round(data.main.feels_like - 272.15)\n            weather.pressure = data.main.pressure\n            weather.humidity = data.main.humidity\n            weather.wind = data.wind\n            weather.wind_speed = data.wind.speed\n            weather.wind_direction = data.wind.deg\n            weather.clouds = data.clouds.all\n            weather.sunrise = new Date(data.sys.sunrise*1000)\n            weather.sunset = new Date(data.sys.sunset*1000)\n            weather.visibility = data.visibility\n        }\n        return {data:[{object:location, state: weather}]}\n    }\n}\n")),(0,i.kt)("h2",{id:"secret"},"Secret"),(0,i.kt)("p",null,"Create a new secret that defines the context for importing the data. In includes the name of the script and the APPID. In the app you can click on the ",(0,i.kt)("inlineCode",{parentName:"p"},"lock")," icon to decrypt this field."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"name: Weather\nfields:\n  - name: script\n    value: Weather\n  - name: location\n    value: Eindhoven\n  - name: APPID\n    value: [YOUR APPID]\n    secret: true\n")),(0,i.kt)("h2",{id:"importer"},"Importer"),(0,i.kt)("p",null,"Create a new importer:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},"name: Weather\ncontext: Weather\ncron: '0 0,15,30,45 * * * *'\n")),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"data")," field enter a list of locations and topics to map to. The ",(0,i.kt)("inlineCode",{parentName:"p"},"object")," field is passed to the OpenAPI as the ",(0,i.kt)("inlineCode",{parentName:"p"},"location")," and the ",(0,i.kt)("inlineCode",{parentName:"p"},"topic")," is the internal name."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csv"},"object, topic\neindhoven, weather.eindhoven\neersel, weather.eersel\namsterdam, weather.amsterdam\n")),(0,i.kt)("p",null,"You can now run the importer to import the weather information for these location. You can also specify that the importer should automatically run every 15 minutes by entering a ",(0,i.kt)("inlineCode",{parentName:"p"},"cron")," specification."))}u.isMDXComponent=!0}}]);