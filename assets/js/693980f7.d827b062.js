(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5093],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return l},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=u(n),m=o,b=d["".concat(s,".").concat(m)]||d[m]||p[m]||r;return n?a.createElement(b,i(i({ref:t},l),{},{components:n})):a.createElement(b,i({ref:t},l))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5235:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return l},default:function(){return d}});var a=n(2122),o=n(9756),r=(n(7294),n(3905)),i=["components"],c={sidebar_position:20},s="Backup",u={unversionedId:"installation/backup",id:"installation/backup",isDocsHomePage:!1,title:"Backup",description:"All user data and documents are stored in a mongo database. The other components only store log files and configuration. Mongo provides an easy way to backup the information using the mongodump command. This also includes any documents and images. You can use a Kubernetes cron job to automatically dump the database at regular intervals. An alternative is to use a shell script and Linux cron job as described below.",source:"@site/docs/installation/backup.md",sourceDirName:"installation",slug:"/installation/backup",permalink:"/docs/installation/backup",version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"defaultSidebar",previous:{title:"Zigbee",permalink:"/docs/installation/zigbee"},next:{title:"Trouble shooting",permalink:"/docs/installation/troubleshooting"}},l=[{value:"Backup database",id:"backup-database",children:[]},{value:"Restore database",id:"restore-database",children:[]}],p={toc:l};function d(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"backup"},"Backup"),(0,r.kt)("p",null,"All user data and documents are stored in a mongo database. The other components only store log files and configuration. Mongo provides an easy way to backup the information using the ",(0,r.kt)("inlineCode",{parentName:"p"},"mongodump")," command. This also includes any documents and images. You can use a Kubernetes cron job to automatically dump the database at regular intervals. An alternative is to use a shell script and Linux cron job as described below. "),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you are just testing the installation or already have a procedure for mongo database backup you may skip this section.")),(0,r.kt)("h2",{id:"backup-database"},"Backup database"),(0,r.kt)("p",null,"Creating a backup can be done by executing a kubernetes ",(0,r.kt)("inlineCode",{parentName:"p"},"exec")," command into the application that is deployed. A second command creates a ",(0,r.kt)("inlineCode",{parentName:"p"},"tar")," archive, which is then copied to the host system. This file can then be transferred to a backup server using ",(0,r.kt)("inlineCode",{parentName:"p"},"ssh"),".\nThese commands can be added to a file 'backup.sh'."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"#!/bin/bash\nkubectl exec -it mongo-0 -- mongodump --db idata --out /tmp\nkubectl exec -it mongo-0 -- tar -cvf /tmp/idata.tar /tmp/idata\nkubectl cp mongo-0:/tmp/idata.tar /tmp/idata.tar'\nscp -P 4422 /tmp/idata.tar [USER]@[IP]:[DIRECTORY]\n")),(0,r.kt)("p",null,"Save the file in a local directory and make sure it has execute rights. Then add the following command to the cron scheduler. In this case a backup is created every hour at 33 minutes past the hour."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"chmod 777 backup.sh\ncrontab -e\n33 * * * * /home/devops/bin/backup.sh > /home/devops/bin/backup.log\n")),(0,r.kt)("h2",{id:"restore-database"},"Restore database"),(0,r.kt)("p",null,"To restore the database you copy the tar file to the deployed mongo instance on kubernetes and unpack and restore from the host system."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"kubectl cp /tmp/idata.tar mongo-0:/tmp\nkubectl exec -it mongo-0 -- tar -xvf /tmp/idata.tar /tmp/idata\nkubectl exec -it mongo-0 -- mongorestore --db idata /tmp/idata\n")))}d.isMDXComponent=!0}}]);