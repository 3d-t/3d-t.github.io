(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8565],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8605:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return d}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],c={sidebar_position:5},s="External access via SSL",l={unversionedId:"installation/ingress",id:"installation/ingress",isDocsHomePage:!1,title:"External access via SSL",description:"Most web browsers and devices require a secure connection over https. You can setup secure access to your Kubernetes cluster using an Kubernetes Ingress. Alternatively you can use Nginx or Apache.",source:"@site/docs/installation/ingress.md",sourceDirName:"installation",slug:"/installation/ingress",permalink:"/docs/installation/ingress",version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"defaultSidebar",previous:{title:"Releases",permalink:"/docs/installation/releases"},next:{title:"MQTT Broker",permalink:"/docs/installation/mqtt"}},u=[{value:"Create certificates",id:"create-certificates",children:[]},{value:"Deploy ingress",id:"deploy-ingress",children:[]},{value:"Update router",id:"update-router",children:[]}],p={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"external-access-via-ssl"},"External access via SSL"),(0,o.kt)("p",null,"Most web browsers and devices require a secure connection over https. You can setup secure access to your Kubernetes cluster using an Kubernetes Ingress. Alternatively you can use Nginx or Apache."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you do not need to provide external access you may skip this section.")),(0,o.kt)("h2",{id:"create-certificates"},"Create certificates"),(0,o.kt)("p",null,"To run a secure server you need a certificate. This certificate validates that your service can be trusted and shows up in the web browser when a user clicks on the lock icon.  You can obtain free SSL certificates from ",(0,o.kt)("a",{parentName:"p",href:"https://letsencrypt.org/"},"LetEncrypt"),". These certificates are valid for 3 months and can be renewed. An easy way to create the certificates is via openssl and certbot."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt install openssl\nsudo apt install certbot\n")),(0,o.kt)("p",null,"You need a so called wildcard certificate so you can expose multiple services that are deployed in the kubernetes cluster, such as ",(0,o.kt)("inlineCode",{parentName:"p"},"app.my_domain.com")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"mqtt.my_domain.com"),". You should replace ",(0,o.kt)("inlineCode",{parentName:"p"},"my_domain.com")," with the actual domain name that you want to use.\nTo create the wildcard certificate:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo certbot certonly --manual --agree-tos -d '*.my_domain.com'\n")),(0,o.kt)("p",null,"Answer the questions and wait for the instructions to deploy a text record. When you apply for a wildcard certificate you have to prove that you are the operator of the domain by placing a TXT record. "),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Please deploy a DNS TXT record under the name\n_acme-challenge.my_domain.com with the following value:\n\nKkfd0s9shC9-eKpYVb601cO1_1OwVEyFsliHRUMSdchI\n\n")),(0,o.kt)("p",null,"You can now configure your domain registration to include a new ",(0,o.kt)("inlineCode",{parentName:"p"},"TXT")," record with name ",(0,o.kt)("inlineCode",{parentName:"p"},"_acme-challenge.my_domain.com")," and value ",(0,o.kt)("inlineCode",{parentName:"p"},"Kkfd0s9shC9-eKpYVb601cO1_1OwVEyFsliHRUMSdchI"),". Before continuing make sure that your domain is updates. This can take several minutes. "),(0,o.kt)("p",null,"You can verify the deployment by entering the domain ",(0,o.kt)("inlineCode",{parentName:"p"},"_acme-challenge.my_domain.com")," in the box on web site ",(0,o.kt)("inlineCode",{parentName:"p"},"http://dnslookup.online/txt.html"),". If the domain is updated you can continue the certbot certification process. The certificates are installed in the directory ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/letsencrypt/live/my_domain.com"),"."),(0,o.kt)("h2",{id:"deploy-ingress"},"Deploy ingress"),(0,o.kt)("p",null,"The certificate and private key generated by certbot are used to create a Kubernetes Secret called ",(0,o.kt)("inlineCode",{parentName:"p"},"wildcard-tls"),". This secret is then used in the configuration of the ingress."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'sudo cp /etc/letsencrypt/live/my_domain.com/fullchain.pem tls.crt\nsudo cp /etc/letsencrypt/live/my_domain.com/privkey.pem tls.key\nsudo kubectl create secret tls wildcard-tls --key="tls.key" --cert="tls.crt"\n')),(0,o.kt)("p",null,"To configure the Ingress create a file 'ingress.yml' with the following content and replace the name ",(0,o.kt)("inlineCode",{parentName:"p"},"my_domain.com")," with your actual domain. Make sure that the name of the secret matches the name of the secret that you just created."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: tls-example-ingress\nspec:\n  tls:\n  - hosts:\n      - app.my_domain.com\n    secretName: wildcard-tls\n  rules:\n  - host: app.my_domain.com\n    http:\n      paths:\n      - path: /\n        pathType: Prefix\n        backend:\n          service:\n            name: app\n            port:\n              number: 3000\n")),(0,o.kt)("p",null,"You can now install the ingress:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"kubectl create -f ingress.yml\n")),(0,o.kt)("p",null,"If you make changes to the configuration you can apply the changes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"kubectl apply -f ingress.yml\n")),(0,o.kt)("h2",{id:"update-router"},"Update router"),(0,o.kt)("p",null,"On your router add a rule that forwards traffic on port ",(0,o.kt)("inlineCode",{parentName:"p"},"443")," to the IP address of the server where the Kubernetes cluster is deployed. Setting up the forwarding rule is different for each router.  You should now be able to access the service from anywhere on the Internet by opening a web browser or using curl:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"curl -v https://app.my_domain.com\n")))}d.isMDXComponent=!0}}]);