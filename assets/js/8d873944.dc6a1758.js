"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9228],{5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>h});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(a),b=r,h=d["".concat(l,".").concat(b)]||d[b]||m[b]||i;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}b.displayName="MDXCreateElement"},9289:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(9668),r=(a(6540),a(5680));const i={sidebar_position:50},o="Parts",s={unversionedId:"digitaltwin/parts",id:"digitaltwin/parts",title:"Parts",description:"Primitive shaped can be combined into more complex parts and these parts can be used in other objects. Parts can also have parameters, for example you can create a table with a variable width and length.",source:"@site/docs/digitaltwin/parts.md",sourceDirName:"digitaltwin",slug:"/digitaltwin/parts",permalink:"/docs/digitaltwin/parts",draft:!1,tags:[],version:"current",sidebarPosition:50,frontMatter:{sidebar_position:50},sidebar:"defaultSidebar",previous:{title:"Solids",permalink:"/docs/digitaltwin/solids"},next:{title:"Animation",permalink:"/docs/digitaltwin/animations"}},l={},p=[{value:"Table",id:"table",level:2},{value:"Assembly",id:"assembly",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...i}=e;return(0,r.yg)(d,(0,n.A)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"parts"},"Parts"),(0,r.yg)("p",null,"Primitive shaped can be combined into more complex parts and these parts can be used in other objects. Parts can also have parameters, for example you can create a table with a variable width and length."),(0,r.yg)("h2",{id:"table"},"Table"),(0,r.yg)("p",null,"The object below shows a table with variables for width and height. Under ",(0,r.yg)("inlineCode",{parentName:"p"},"Variables")," drag and drop the ",(0,r.yg)("inlineCode",{parentName:"p"},"parameter")," block and enter a name for the parameter and a default value. These parameters can now be used to move and dimension basic shapes. You can apply mathematical operations by picking operators from the ",(0,r.yg)("inlineCode",{parentName:"p"},"Math")," section. The first four boxes represent the legs of the table and their position is specified by a move transformation with ",(0,r.yg)("inlineCode",{parentName:"p"},"length")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"width")," as parameters. The table surface is specified with the last box. Enter the name ",(0,r.yg)("inlineCode",{parentName:"p"},"Table")," and click on ",(0,r.yg)("inlineCode",{parentName:"p"},"Save"),"."),(0,r.yg)("p",null,(0,r.yg)("img",{src:a(891).A,width:"2732",height:"1802"})),(0,r.yg)("h2",{id:"assembly"},"Assembly"),(0,r.yg)("p",null,"We will now create a conference table as an assembly of this table object and an array of chairs. The chair is defined as a seperate part similar to the table. The new object has a parameter for the number of chairs with default value ",(0,r.yg)("inlineCode",{parentName:"p"},"10"),". The array of chairs is created by inserting a ",(0,r.yg)("inlineCode",{parentName:"p"},"Linear array")," from the ",(0,r.yg)("inlineCode",{parentName:"p"},"Repeat")," section. Set the direction of the array to ",(0,r.yg)("inlineCode",{parentName:"p"},"X")," and the increment to ",(0,r.yg)("inlineCode",{parentName:"p"},"1")," and the ",(0,r.yg)("inlineCode",{parentName:"p"},"times")," to repeat to ",(0,r.yg)("inlineCode",{parentName:"p"},"chairs / 2"),"."),(0,r.yg)("p",null,(0,r.yg)("img",{src:a(3992).A,width:"2732",height:"1802"})),(0,r.yg)("p",null,"The new part ",(0,r.yg)("inlineCode",{parentName:"p"},"Conference table")," can be used in another assemlby to create an office workspace with different size tables."),(0,r.yg)("p",null,(0,r.yg)("img",{src:a(8688).A,width:"2732",height:"1802"})))}m.isMDXComponent=!0},3992:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/modeler_solids_conference_table-6e61350ddb806d1142c2a9396cf1230c.png"},891:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/modeler_solids_table-76ea8db6e10187cc6da10b2055f445f2.png"},8688:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/modeler_solids_workspace-23410affe355f207905405559dd6be3a.png"}}]);