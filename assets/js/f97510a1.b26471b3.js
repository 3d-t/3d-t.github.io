(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5361],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var l=a.createContext({}),p=function(t){var e=a.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=p(t.components);return a.createElement(l.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,l=t.parentName,c=s(t,["components","mdxType","originalType","parentName"]),m=p(n),d=r,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return n?a.createElement(h,i(i({ref:e},c),{},{components:n})):a.createElement(h,i({ref:e},c))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s.mdxType="string"==typeof t?t:r,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3110:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:25},l="Home Assistant",p={unversionedId:"integrations/homeassistant",id:"integrations/homeassistant",isDocsHomePage:!1,title:"Home Assistant",description:"Homeassistant is an open source platform for home automation. It provides integrations with many devices and supports a Home Assistent Rest API for reading and setting parameters.",source:"@site/docs/integrations/homeassistant.md",sourceDirName:"integrations",slug:"/integrations/homeassistant",permalink:"/docs/integrations/homeassistant",version:"current",sidebarPosition:25,frontMatter:{sidebar_position:25},sidebar:"defaultSidebar",previous:{title:"Tesla",permalink:"/docs/integrations/tesla"},next:{title:"Nefit",permalink:"/docs/integrations/nefit"}},c=[{value:"Web service",id:"web-service",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Secret",id:"secret",children:[]},{value:"Script",id:"script",children:[]}],u={toc:c};function m(t){var e=t.components,n=(0,r.Z)(t,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"home-assistant"},"Home Assistant"),(0,o.kt)("p",null,"Homeassistant is an open source platform for home automation. It provides integrations with many devices and supports a ",(0,o.kt)("a",{parentName:"p",href:"https://developers.home-assistant.io/docs/api/rest/"},"Home Assistent Rest API")," for reading and setting parameters."),(0,o.kt)("h2",{id:"web-service"},"Web service"),(0,o.kt)("p",null,"Create a directory ",(0,o.kt)("inlineCode",{parentName:"p"},"/home/devops/homeassistant")," for storing the configuration data. Install the helm chart:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"helm install homeassistant 3d-t/homeassistant\n")),(0,o.kt)("h2",{id:"configuration"},"Configuration"),(0,o.kt)("p",null,"Open a web browser to ",(0,o.kt)("inlineCode",{parentName:"p"},"http://[IP_ADDRESS]:8123")," where the IP_ADDRESS is the the address of the server where kubernetes is installed. Follow the onboarding procedure. Go to the user profile and create a long lived access token."),(0,o.kt)("h2",{id:"secret"},"Secret"),(0,o.kt)("p",null,"Create a secret with name 'Homeassistant' and the following fields:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"field"),(0,o.kt)("th",{parentName:"tr",align:null},"value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"type"),(0,o.kt)("td",{parentName:"tr",align:null},"script")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"token"),(0,o.kt)("td",{parentName:"tr",align:null},"[TOKEN]")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"script"),(0,o.kt)("td",{parentName:"tr",align:null},"Homeassistant")))),(0,o.kt)("h2",{id:"script"},"Script"),(0,o.kt)("p",null,"Create a script with a ",(0,o.kt)("inlineCode",{parentName:"p"},"get")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"set")," function that calls the Homeassistant REST API.\nThe Homeassistant API can be accessed via the name of the service in the cluster ",(0,o.kt)("inlineCode",{parentName:"p"},"homeassistant"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const get = async (object, context) => {\n    let options = { \n      url: 'http://homeassistant:8123/api/states/' + object,\n      headers: {\n        'Authorization': 'Bearer ' + context.token\n       }\n    }\n    let response = await http.request(options);\n    return response.data\n}\n\nconst set = async (object, key, value, context) => {\n    let options = { \n      url: 'http://homeassistant:8123/api/services/climate/set_temperature',\n      method: 'POST',\n      data: {\n        'entity_id' : object, \n      },\n      headers: {\n        'Authorization': 'Bearer ' + context.token\n      }\n    }\n    options.data[key] = value\n    let response = await http.request(options);\n    return response.data\n}\n")),(0,o.kt)("h1",{id:"connector"},"Connector"),(0,o.kt)("p",null,"Create a connector with name ",(0,o.kt)("inlineCode",{parentName:"p"},"Homeassistant")," and data source ",(0,o.kt)("inlineCode",{parentName:"p"},"Homeassistant"),". To read temperature from an object in Homeassistant with entity_id ",(0,o.kt)("inlineCode",{parentName:"p"},"climate.woonkamer"),", add the following object mapping:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"topic"),(0,o.kt)("th",{parentName:"tr",align:null},"value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"home.hvac"),(0,o.kt)("td",{parentName:"tr",align:null},"climate.woonkamer")))),(0,o.kt)("p",null,"To read the temperature setting and actual temperature add the following key mapping:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"key"),(0,o.kt)("th",{parentName:"tr",align:null},"value"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"thermostat"),(0,o.kt)("td",{parentName:"tr",align:null},"attributes.temperature")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"temperature"),(0,o.kt)("td",{parentName:"tr",align:null},"attributes.current_temperature")))))}m.isMDXComponent=!0}}]);