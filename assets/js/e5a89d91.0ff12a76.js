"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[511],{15680:(e,t,a)=>{a.d(t,{xA:()=>p,yg:()=>m});var n=a(96540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},p=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(a),g=i,m=c["".concat(s,".").concat(g)]||c[g]||h[g]||o;return a?n.createElement(m,r(r({ref:t},p),{},{components:a})):n.createElement(m,r({ref:t},p))}));function m(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[c]="string"==typeof e?e:i,r[1]=l;for(var d=2;d<o;d++)r[d]=a[d];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},70194:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var n=a(58168),i=(a(96540),a(15680));const o={sidebar_position:120},r="Transformations",l={unversionedId:"animation/model",id:"animation/model",title:"Transformations",description:"This example shows how the animation system can be used to transform models. The example shows an animation of a digital twin of a shipping lock with three bridges, traffic lights, road barriers and a ship.  The components of a digital twin can be imported as IFC or glTF files, and can also be created from scratch with the solid modeler. In this example we assume that you do not have any existing models and need to build everything yourself.",source:"@site/docs/animation/model.md",sourceDirName:"animation",slug:"/animation/model",permalink:"/docs/animation/model",draft:!1,tags:[],version:"current",sidebarPosition:120,frontMatter:{sidebar_position:120},sidebar:"defaultSidebar",previous:{title:"Camera",permalink:"/docs/animation/camera"},next:{title:"Map orientation",permalink:"/docs/mapping/coordinates"}},s={},d=[{value:"Bridge",id:"bridge",level:2},{value:"Doors",id:"doors",level:2},{value:"Light",id:"light",level:2},{value:"Barrier",id:"barrier",level:2},{value:"Dam",id:"dam",level:2},{value:"Model",id:"model",level:2},{value:"Form",id:"form",level:2},{value:"Connector",id:"connector",level:2},{value:"Animation",id:"animation",level:2}],p={toc:d},c="wrapper";function h(e){let{components:t,...o}=e;return(0,i.yg)(c,(0,n.A)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"transformations"},"Transformations"),(0,i.yg)("p",null,"This example shows how the animation system can be used to transform models. The example shows an animation of a digital twin of a shipping lock with three bridges, traffic lights, road barriers and a ship.  The components of a digital twin can be imported as IFC or glTF files, and can also be created from scratch with the solid modeler. In this example we assume that you do not have any existing models and need to build everything yourself."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(92175).A,width:"1200",height:"750"})),(0,i.yg)("h2",{id:"bridge"},"Bridge"),(0,i.yg)("p",null,"A draw bridge is constructed from block primitives. A parameter ",(0,i.yg)("inlineCode",{parentName:"p"},"angle")," specifies the rotation of the bridge. A part 'Fence' is included and repeated two times so that it appears at both edges of the road. The part is named ",(0,i.yg)("inlineCode",{parentName:"p"},"Bridge")," and stored in library ",(0,i.yg)("inlineCode",{parentName:"p"},"T06"),"."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(4486).A,width:"1200",height:"750"})),(0,i.yg)("p",null,"The main topic of the animation is ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru")," and the topic ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru.bridge")," contains all information on the position and orientation. The angle of the bridge is defined by the topic ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru.bridge.angle"),". Users can specify the angle by setting a value between ",(0,i.yg)("inlineCode",{parentName:"p"},"0")," for fully closed and ",(0,i.yg)("inlineCode",{parentName:"p"},"100")," for full opened. The special ",(0,i.yg)("inlineCode",{parentName:"p"},"geometry")," subtopic calls the solid by entering the name of the library, the name of the solid, and the parameter for the angle. This parameter is an expression that used the ",(0,i.yg)("inlineCode",{parentName:"p"},"angle")," subtopic. When the ",(0,i.yg)("inlineCode",{parentName:"p"},"angle")," is set to ",(0,i.yg)("inlineCode",{parentName:"p"},"100"),", the parameter becomes ",(0,i.yg)("inlineCode",{parentName:"p"},"90"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-JavaScript"},"lock.bru.bridge.angle: 0\nlock.bru.bridge.geometry: T06.Bridge(lock.bru.bridge.angle * 0.9)\nlock.bru.bridge.translation: -95, 22, 10\nlock.bru.bridge.rotation: 0, 0, 270\n")),(0,i.yg)("h2",{id:"doors"},"Doors"),(0,i.yg)("p",null,"The shipping lock has two sets of door, one for the lakeside and one for the seaside. Each set of doors includes four doors. The solid has a parameter ",(0,i.yg)("inlineCode",{parentName:"p"},"angle")," that specifies the opening of the lock: ",(0,i.yg)("inlineCode",{parentName:"p"},"0")," means fully closed and ",(0,i.yg)("inlineCode",{parentName:"p"},"90")," means fully opened. Note that the ",(0,i.yg)("inlineCode",{parentName:"p"},"angle")," parameter is not used directly to control the rotation of the doors but is used in an expression for variable ",(0,i.yg)("inlineCode",{parentName:"p"},"a")," so that the actual angle is between ",(0,i.yg)("inlineCode",{parentName:"p"},"5")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"85")," degrees, regardless of the user input. The difference between parameters and variables is that parameters can be specified externally, while variables are only used internally in the script for the solid."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(21212).A,width:"1200",height:"750"})),(0,i.yg)("p",null,"The topics that control the lock doors on the lakeside are defined below. The status of the lock is defined by the ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru.lake.lock.angle")," topic. The door set is moved ",(0,i.yg)("inlineCode",{parentName:"p"},"-90")," units along the x-axis."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"lock.bru.lake.lock.angle: 0\nlock.bru.lake.lock.geometry: T06.Door set(lock.bru.lake.lock.angle * 0.9)\nlock.bru.lake.lock.translation.x: -90,\n")),(0,i.yg)("h2",{id:"light"},"Light"),(0,i.yg)("p",null,"There are two light signals on the lakeside of the lock. The solid ",(0,i.yg)("inlineCode",{parentName:"p"},"Light lock")," includes a part ",(0,i.yg)("inlineCode",{parentName:"p"},"Trafic light 2")," which has parameters for the color of the top light and the color of the bottom light. Instead of controlling the colors of both the top and bottom light we use a parameter ",(0,i.yg)("inlineCode",{parentName:"p"},"state"),", which can be ",(0,i.yg)("inlineCode",{parentName:"p"},"stop"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"prepare")," or ",(0,i.yg)("inlineCode",{parentName:"p"},"proceed"),". Three ",(0,i.yg)("inlineCode",{parentName:"p"},"if")," statements are used to set the color of the top and bottom light, depending on the state."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(20605).A,width:"1200",height:"750"})),(0,i.yg)("p",null,"There are topics for the left and right-hand light of the lake entrance of the dock. The state of both lights are controlled by the topic ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru.lake.light.state"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"lock.bru.lake.light.state: 'stop'\nlock.bru.lake.light.right.geometry: T06.Light lock(lock.bru.lake.light.state)\nlock.bru.lake.light.right.translation: -109, 4, 8\nlock.bru.lake.light.right.rotation: 0, 0, 180\nlock.bru.lake.light.right.scale: 2, 2, 2\n")),(0,i.yg)("h2",{id:"barrier"},"Barrier"),(0,i.yg)("p",null,"There are two sets of road barriers for the draw bridge and for the roll bridge. The solid ",(0,i.yg)("inlineCode",{parentName:"p"},"Barrier set")," includes two solids ",(0,i.yg)("inlineCode",{parentName:"p"},"Barrier"),", with a parameter ",(0,i.yg)("inlineCode",{parentName:"p"},"angle"),", and two solids ",(0,i.yg)("inlineCode",{parentName:"p"},"Traffic pole bridge"),", with a parameter for the color of the light. "),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(66217).A,width:"1200",height:"750"})),(0,i.yg)("p",null,"The topics for the position and status of the right lakeside barrier include the color of the light and the angle of the barrier as a percentage between ",(0,i.yg)("inlineCode",{parentName:"p"},"0")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"100"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"lock.bru.lake.barrier.angle: 0\nlock.bru.lake.barrier.color: 'red'\nlock.bru.lake.barrier.right.geometry: Infra.Barrier set(lock.bru.lake.barrier.angle * 0.9, lock.bru.lake.barrier.color)\nlock.bru.lake.barrier.right.translation: -95, -10, 10.5\nlock.bru.lake.barrier.right.rotation: 0, 0, 270\n")),(0,i.yg)("h2",{id:"dam"},"Dam"),(0,i.yg)("p",null,"The shape of the dam is created by a solid ",(0,i.yg)("inlineCode",{parentName:"p"},"Base")," for the shape of the lock. This shape is created by extruding a profile with the shape of the slanted terrain and the channel in the lock. Some other wedges and blocks are added to the left and right as a base for the road."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(90315).A,width:"1200",height:"750"})),(0,i.yg)("p",null,"Note that this solid does not have any parameters. Instead of linking the geometry to the name of the script we can include a static glTF file. This file is automatically created when the solid is saved. The advantage of using static glTF files over solids is that the rendering is faster."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"lock.bru.terrain.geometry: T06.Dam.gltf,\n")),(0,i.yg)("h2",{id:"model"},"Model"),(0,i.yg)("p",null,"To create an animation a new model is created and all topics for the various elements are loaded in the topic view.\nTo change the angle of the bridge you can open the topic ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru.bridge.angle")," in another browser and set the value to ",(0,i.yg)("inlineCode",{parentName:"p"},"45"),". The model should be updated automatically since it is automatically subscribed to updates of all topics that are included in the model."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(33067).A,width:"1200",height:"750"})),(0,i.yg)("h2",{id:"form"},"Form"),(0,i.yg)("p",null,"As an alternative to entering new topic values with the keyboard you can also create the following form. All topics are relative to the main topic ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru"),"."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-javascript"},"Lock\n\nlake.light.state:Lake lock light\n[\nprepare,\nproceed,\nstop,\n]\n|6\n\nsea.light.state:Sea lock light\n[\nprepare,\nproceed,\nstop,\n]\n|6\n\nlake.barrier.angle:Lake barrier\n[0|100]\n|6\n\nsea.barrier.angle:Sea barrier\n[0|100]\n|6\n\nfootbridge.extension:Foot bridge\n[0|100]\n|6\n\nrollbridge.extension:Roll Bridge\n[0|100]\n|6\n\nlake.lock.angle:Lake lock\n[0|100]\n|6\n\nsea.lock.angle:Sea lock\n[0|100]\n|6\n\nbridge.angle:Draw Bridge\n[0|100]\n\nwater.level:Water level\n[0|10]\n\nship.position:Schip position\n[0|400]\n")),(0,i.yg)("p",null,"To open the form go to the ",(0,i.yg)("inlineCode",{parentName:"p"},"items")," section and search for ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru"),". When clicking on the item the system searches for forms that match any subtopics in the item. In this case the form above with name ",(0,i.yg)("inlineCode",{parentName:"p"},"Lock")," is opened. You can now drive the animation by changing the values of the sliders and drop-down menus."),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(40745).A,width:"1200",height:"750"})),(0,i.yg)("h2",{id:"connector"},"Connector"),(0,i.yg)("p",null,"You can also automatically update the model by creating a connector that updates the various subtopics under ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru"),". For example, the connector can update the water level by making a call to a web service with real time water level information. In this example we set the values of the topics by importing a CSV file. The file has three headers: ",(0,i.yg)("inlineCode",{parentName:"p"},"topic"),", ",(0,i.yg)("inlineCode",{parentName:"p"},"time")," and ",(0,i.yg)("inlineCode",{parentName:"p"},"value"),". When running the connector the name of the topic is defined by the expression in the ",(0,i.yg)("inlineCode",{parentName:"p"},"key")," field. In this case it is ",(0,i.yg)("inlineCode",{parentName:"p"},"lock.bru")," followed by the value in the first column of the CSV file. The time is set to a fixed date ",(0,i.yg)("inlineCode",{parentName:"p"},"2024-01-01")," plus the value in the ",(0,i.yg)("inlineCode",{parentName:"p"},"time")," column multiplied by 1000. This is because the time is specified in milliseconds. Click ",(0,i.yg)("inlineCode",{parentName:"p"},"test")," to check that all topics, values and times are correct and then ",(0,i.yg)("inlineCode",{parentName:"p"},"Run")," to actually import the data. "),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(96832).A,width:"1200",height:"800"})),(0,i.yg)("h2",{id:"animation"},"Animation"),(0,i.yg)("p",null,"To start the animation, click on the ",(0,i.yg)("inlineCode",{parentName:"p"},"Time")," tab and include all topics that you want to animate. Note that in this example we have disabled animation of the camera position and target. Next, specify the start and end time for collecting historical data on the topics listed. When ready click on the ",(0,i.yg)("inlineCode",{parentName:"p"},"Animate")," button. "),(0,i.yg)("p",null,(0,i.yg)("img",{src:a(92175).A,width:"1200",height:"750"})),(0,i.yg)("p",null,"Note: You can also watch a video of this animation is the ",(0,i.yg)("a",{parentName:"p",href:"/docs/lockvideo"},"video section"),". This video includes more details on the setup and also shows the view from inside a ship in the lock by enabling the camera animation."))}h.isMDXComponent=!0},96832:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/animation_connector_lock-1f29cfce070ecd42d2755557a3ba71c4.png"},40745:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/animation_form_lock-47e36994469d301f11c7afa235dd8548.png"},66217:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/animation_lock_barrier_set-4fe9befc7313af3bba03c63960acda5e.png"},4486:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/animation_lock_bridge-859f4e7aa02a206f5e0dc9cdffef7182.png"},90315:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/animation_lock_dam-a9bf15f3589f32f3051221f73f39d504.png"},21212:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/animation_lock_door_set-8323dc88fdf28e95816c44550f97af87.png"},92175:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/animation_lock_frames-b4c9053bb0913fe055e3d0088f9ac5da.png"},20605:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/animation_lock_light-3582e0b74421e97ba10ad327fafab135.png"},33067:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/animation_topics_lock-adfe909e8f776e76b379db700d2e97e9.png"}}]);