(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3188],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),h=a,f=u["".concat(c,".").concat(h)]||u[h]||l[h]||i;return n?r.createElement(f,o(o({ref:t},d),{},{components:n})):r.createElement(f,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5808:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var r=n(2122),a=n(9756),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:40},c="OpenWeather",p={unversionedId:"integrations/openweather",id:"integrations/openweather",isDocsHomePage:!1,title:"OpenWeather",description:"Weather information can be used for analysis and predication purposes or to control devices. OpenWeather is a free weather service which provides current weather and forecast for all locations. This integration used the standard importer in combination with a JavaScript class for retrieving and parsing the weather information. The weather information also includes the sunrise and sunset for the date and location. This can be used to control lights.",source:"@site/docs/integrations/openweather.md",sourceDirName:"integrations",slug:"/integrations/openweather",permalink:"/docs/integrations/openweather",version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40},sidebar:"defaultSidebar",previous:{title:"Nefit",permalink:"/docs/integrations/nefit"},next:{title:"Tuya",permalink:"/docs/integrations/tuya"}},d=[{value:"Script",id:"script",children:[]},{value:"Datasource",id:"datasource",children:[]},{value:"Connector",id:"connector",children:[]},{value:"Form",id:"form",children:[]}],l={toc:d};function u(e){var t=e.components,s=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},l,s,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"openweather"},"OpenWeather"),(0,i.kt)("p",null,"Weather information can be used for analysis and predication purposes or to control devices. OpenWeather is a free weather service which provides current weather and forecast for all locations. This integration used the standard importer in combination with a JavaScript class for retrieving and parsing the weather information. The weather information also includes the sunrise and sunset for the date and location. This can be used to control lights."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(6263).Z})),(0,i.kt)("h2",{id:"script"},"Script"),(0,i.kt)("p",null,"Create a new script with a ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," function. The ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," function loads the secret defined in the importer, which includes the ",(0,i.kt)("inlineCode",{parentName:"p"},"APPID"),".  The script makes an HTTP request to the OpenWeather API and then returns the results as an object. The parameter ",(0,i.kt)("inlineCode",{parentName:"p"},"object")," is the name of the location, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"Paris")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"Rome"),". Note that the object also contains a field ",(0,i.kt)("inlineCode",{parentName:"p"},"object")," with the value of the parameter object, in this case the geographical location for which the weather was requested."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const get = async (object, context) => {\n    const url = 'https://api.openweathermap.org/data/2.5/weather?q=' + object + \"&APPID=\" + context.APPID;\n    let response = await http.get(url)\n    let data = response\n    let weather = {}\n    if (data) {\n        weather.temperature = Math.round(data.main.temp - 272.15)\n        weather.windchill = Math.round(data.main.feels_like - 272.15)\n        weather.pressure = data.main.pressure\n        weather.humidity = data.main.humidity\n        weather.wind = data.wind\n        weather.wind_speed = data.wind.speed\n        weather.wind_direction = data.wind.deg\n        weather.clouds = data.clouds.all\n        weather.sunrise = new Date(data.sys.sunrise * 1000)\n        weather.sunset = new Date(data.sys.sunset * 1000)\n        weather.visibility = data.visibility\n    }\n    return weather\n}\n")),(0,i.kt)("h2",{id:"datasource"},"Datasource"),(0,i.kt)("p",null,"OpenWeather is a free service but they require you to register and obtain a key.  Open a browser to ",(0,i.kt)("a",{parentName:"p",href:"https://openweathermap.org/api"},"https://openweathermap.org/api")," and subscibe to the free service and request an API key. Create a new secret with fields for ",(0,i.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"script")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"APPID"),".\nThis key needs to be included in every request to the API and is stored in a secret."),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(4594).Z})),(0,i.kt)("h2",{id:"connector"},"Connector"),(0,i.kt)("p",null,"Create a new connector and enter the name of the secret in the data source field. Optionally specify a schedule for running the importer. Click on ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")," in the menu to create one or more objects that represent the locations for which you need the weather info. If no key mapping is defined all fields are automatically included with their original name. "),(0,i.kt)("p",null,(0,i.kt)("img",{src:n(7856).Z})),(0,i.kt)("h2",{id:"form"},"Form"),(0,i.kt)("p",null,"Create a new form with the following definition. Note that the wind control is displayed as a combination of wind speed and wind direction. The ",(0,i.kt)("inlineCode",{parentName:"p"},"sunrise")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"sunset")," values are imported as date objects and displayed as time using a JavaScript function ",(0,i.kt)("inlineCode",{parentName:"p"},"toLocaleTimeString"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"Weather\n\nTemperature\n<temperature\n[-40|-5:purple,-5|5:blue,5|18:magenta,18|25:green,25|30:orange,30|40:red C]\n|4\n\nWind chill\n<windchill\n[-40|-5:purple,-5|5:blue,5|18:magenta,18|25:green,25|25:orange,30|40:red C]\n|4\n\nClouds\n<clouds\n[0|20:blue,20|40:yellow,40|80:green,80|100:grey %]\n|4\n\nPressure\n<pressure\n[0000 hPa]\n|4\n\nHumidity\n<humidity*20\n[00]\n|4\n\nVisibility\n<visibility\n[0000 m]\n|4\n\nWind\n<\"\" + Math.round(wind_speed*3.6) + '/' + wind_direction\n[000]\n|4\n\nSun rise\n<new Date(sunrise).toLocaleTimeString()\n|4\n\nSun set\n<new Date(sunset).toLocaleTimeString()\n|4\n")))}u.isMDXComponent=!0},7856:function(e,t,n){"use strict";t.Z=n.p+"assets/images/importer_openweather-6f0f3c3edc0b4ad0b03cdb64efa22246.png"},6263:function(e,t,n){"use strict";t.Z=n.p+"assets/images/item_weather-84da8e5e61626fbb210b2d8da8cb3133.png"},4594:function(e,t,n){"use strict";t.Z=n.p+"assets/images/secret_openweather-02529af6041cf8d3c5fc1ce5e692a16b.png"}}]);