"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3222],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>u});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),g=p(a),m=r,u=g["".concat(s,".").concat(m)]||g[m]||d[m]||i;return a?n.createElement(u,o(o({ref:t},c),{},{components:a})):n.createElement(u,o({ref:t},c))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[g]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},34648:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var n=a(58168),r=(a(96540),a(15680));const i={sidebar_position:300},o="Diagrams",l={unversionedId:"drawings/diagrams",id:"drawings/diagrams",title:"Diagrams",description:"Drawings can be used to display IoT values stored in topics and values can also be modified by clicking on elements in the drawing. In this example we show how this can be used to display the current state of an irrigation system and how the user can control it by clicking on valves and pump in the drawing.",source:"@site/docs/drawings/diagrams.md",sourceDirName:"drawings",slug:"/drawings/diagrams",permalink:"/docs/drawings/diagrams",draft:!1,tags:[],version:"current",sidebarPosition:300,frontMatter:{sidebar_position:300},sidebar:"defaultSidebar",previous:{title:"Interactive SVG",permalink:"/docs/drawings/interactive"},next:{title:"IFC",permalink:"/docs/buildings/ifc"}},s={},p=[{value:"Special topics",id:"special-topics",level:2},{value:"Topics",id:"topics",level:2},{value:"Diagram",id:"diagram",level:2}],c={toc:p},g="wrapper";function d(e){let{components:t,...i}=e;return(0,r.yg)(g,(0,n.A)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"diagrams"},"Diagrams"),(0,r.yg)("p",null,"Drawings can be used to display IoT values stored in topics and values can also be modified by clicking on elements in the drawing. In this example we show how this can be used to display the current state of an irrigation system and how the user can control it by clicking on valves and pump in the drawing."),(0,r.yg)("h2",{id:"special-topics"},"Special topics"),(0,r.yg)("p",null,"The link between the SVG drawings and topics are implemented by special topics. These topics can be created manually or with an import connector. "),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"topic"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"geometry"),(0,r.yg)("td",{parentName:"tr",align:null},"Name of SVG file or drawing with parameters.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"translation"),(0,r.yg)("td",{parentName:"tr",align:null},"Comma separate list of x,y values for positioning the drawing.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"rotation"),(0,r.yg)("td",{parentName:"tr",align:null},"Comma separate list of angle and x,y values for the rotation center point.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},"scale"),(0,r.yg)("td",{parentName:"tr",align:null},"Comma separated list of x,y values for scaling the drawing.")))),(0,r.yg)("h2",{id:"topics"},"Topics"),(0,r.yg)("p",null,"The example below shows how to link IoT values stored in topics to the drawing. The topics are connected to the drawing with the ",(0,r.yg)("inlineCode",{parentName:"p"},"geometry")," attribute. This includes the name of the drawing and a single parameter, in this case the name of the topic 'irrigation_0'. "),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"irrigation_0.geometry = Irrigation(irrigation_0)\nirrigation_0.pump = 0\nirrigation_0.valve1 = 1\nirrigation_0.valve2 = 0\nirrigation_0.valve3 = 1\nirrigation_0.scale = 0.5, 0.5\n")),(0,r.yg)("p",null,"When a name of a topic is specified, the parameter is converted to a JSON object that contains the fields and values of the sub topics. So in this case the ",(0,r.yg)("inlineCode",{parentName:"p"},"irrigation_0")," topic is converted to the following object:"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},'let irrigation_0 = {\n    "pump": 0,\n    "valve1": 1,\n    "valve2": 0,\n    "valve3": 0,\n    "scale": 0.5, 0.5\n}\n')),(0,r.yg)("p",null,"A second drawing with different values is shown below. The settings for the pumps and valves are different. The drawing is positioned 400 pixels to the right of the first drawing."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-javascript"},"irrigation_1.geometry = Irrigation(irrigation_1)\nirrigation_1.pump = 1\nirrigation_1.valve1 = 0\nirrigation_1.valve2 = 1\nirrigation_1.valve3 = 1\nirrigation_1.scale = 0.5, 0.5\nirrigation_1.translation = 400,0\n")),(0,r.yg)("h2",{id:"diagram"},"Diagram"),(0,r.yg)("p",null,"From the navigation menu select the option ",(0,r.yg)("inlineCode",{parentName:"p"},"Diagrams"),". Then click the button ",(0,r.yg)("inlineCode",{parentName:"p"},"Add")," to create a new diagram. In the diagram click on the ",(0,r.yg)("inlineCode",{parentName:"p"},"+")," button to add topics to display in the diagram. When you click on the pumps or valves in the diagram, the values of the related topics are updated. The diagram functions as a custom user interface component such as a date picker of slider."),(0,r.yg)("p",null,(0,r.yg)("img",{src:a(17551).A,width:"1200",height:"650"})))}d.isMDXComponent=!0},17551:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/diagrams_irrigation-47114bea690c70409da9efebafe163d2.png"}}]);