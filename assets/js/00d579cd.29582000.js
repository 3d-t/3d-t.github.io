"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1175],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>y});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(t),u=r,y=d["".concat(c,".").concat(u)]||d[u]||m[u]||o;return t?a.createElement(y,i(i({ref:n},s),{},{components:t})):a.createElement(y,i({ref:n},s))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},11742:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=t(58168),r=(t(96540),t(15680));const o={sidebar_position:20},i="Dynamic coloring",l={unversionedId:"visualization/colormap",id:"visualization/colormap",title:"Dynamic coloring",description:"Instead of using a JavaScript expression that defines the color we can also use a color table defined in a form. The advantage of this method is that we can dynamically switch between various parameters defined in the form. In this example, we have a form that displays the temperature and humidity of an area.",source:"@site/docs/visualization/colormap.md",sourceDirName:"visualization",slug:"/visualization/colormap",permalink:"/docs/visualization/colormap",draft:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"defaultSidebar",previous:{title:"Fixed color",permalink:"/docs/visualization/color"},next:{title:"Light",permalink:"/docs/visualization/lights"}},c={},p=[{value:"Topics",id:"topics",level:2},{value:"Form",id:"form",level:2},{value:"Model",id:"model",level:2},{value:"Explanation",id:"explanation",level:2}],s={toc:p},d="wrapper";function m(e){let{components:n,...o}=e;return(0,r.yg)(d,(0,a.A)({},s,o,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"dynamic-coloring"},"Dynamic coloring"),(0,r.yg)("p",null,"Instead of using a JavaScript expression that defines the color we can also use a color table defined in a form. The advantage of this method is that we can dynamically switch between various parameters defined in the form. In this example, we have a form that displays the temperature and humidity of an area."),(0,r.yg)("h2",{id:"topics"},"Topics"),(0,r.yg)("p",null,"Each area in the model has three topics: a link to the name of the node in the GLTF model, temperature, and humidity. These parameters can be obtained automatically from IoT devices and imported via a connector."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"site.B01.geometry = Building.gltf\nsite.B01.area_1_a_Living.temperature = 22\nsite.B01.area_1_a_Living.humidity = 66\nsite.B01.area_1_a_Living.node = IcfSpace_1_a_Unit_Living\nsite.B01.area_1_b_Living.temperature = 25\nsite.B01.area_1_b_Living.humidity = 30\nsite.B01.area_1_b_Living.node = IcfSpace_1_b_Unit_Living\n")),(0,r.yg)("h2",{id:"form"},"Form"),(0,r.yg)("p",null,"Create a new form and include two controls for ",(0,r.yg)("inlineCode",{parentName:"p"},"temperature")," and ",(0,r.yg)("inlineCode",{parentName:"p"},"humidity"),". In the form, you specify how the values are mapped to color names. For example, in the form below a temperature of 15 degrees is converted to ",(0,r.yg)("inlineCode",{parentName:"p"},"blue"),"."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre"},"Apartment Room\n\nReference\n|6\n\nName\n|6\n\nTemperature\n[0|18:blue,18|21:green,21|24:orange,24|30:red 00]\n\nHumidity\n[0|50:grey,70|100:blue 00]\n\nVolume\n[0.00 m3]\n\nArea\n[0.00 m2]\n")),(0,r.yg)("h2",{id:"model"},"Model"),(0,r.yg)("p",null,"Create a new model and specify the topics you want to visualize, for example, ",(0,r.yg)("inlineCode",{parentName:"p"},"site."),"B01`.  All subtopics that contain the references to the geometry and nodes are included. Now select the form you want to use for visualization and select one of the parameters in the form. If you change the parameter, the model is automatically updated. If you click on one of the areas in the model the form that shows the parameters of that area is opened."),(0,r.yg)("p",null,(0,r.yg)("img",{src:t(99271).A,width:"1200",height:"750"})),(0,r.yg)("p",null,"You can now change the coloring scheme by selecting another parameter from the drop-down menu. In this case, we select the parameter ",(0,r.yg)("inlineCode",{parentName:"p"},"Humidity"),". The areas are now colored according to the current value of the ",(0,r.yg)("inlineCode",{parentName:"p"},"Humidity")," subtopics of the area and the color ranges defined for the humidity parameter. You can select any parameter defined in the form that has a numerical value and a color mapping."),(0,r.yg)("h2",{id:"explanation"},"Explanation"),(0,r.yg)("p",null,"To apply dynamic coloring the topics are connected to the GLTF model and the nodes in the model. The ",(0,r.yg)("inlineCode",{parentName:"p"},"geometry")," subtopic defines the name of the model and the ",(0,r.yg)("inlineCode",{parentName:"p"},"node")," subtopic defines the name of the node. You can then specify the subtopics that you want to visualize. For example, occupancy, CO2 level, or temperature. The parameter values are converted to colors by using a form that includes color mapping."),(0,r.yg)("mermaid",{value:"flowchart \n    direction RL\n    subgraph Topics\n        Parent[building.b01]\n        Topic[unit_1_a]\n        Geometry[.geometry \\n A.gltf]\n        Temperature[.temperature\\n22 C]\n        Humidity[.humidity\\n 66%]\n        Node[.node \\n1_A]\n        Parent --\x3e Topic\n        Parent --\x3e Geometry\n        Topic --\x3e Node\n        Topic --\x3e Temperature\n        Topic --\x3e Humidity\n    end\n    subgraph GLTF\n        Building[Building \\nA] --\x3e Storey[Storey \\n1]\n        Storey --\x3e Unit[Unit \\n1_A]\n        Storey --\x3e UnitB[Unit \\n1_B]\n        Unit --\x3e Space\n        Unit --\x3e Wall\n        Unit --\x3e Slab\n    end\n    Node --\x3e Space\n    Temperature --Color mapping--\x3e Space\n    Humidity --Color mapping--\x3e Space\n    Geometry --\x3e Building\n    style Parent fill:#fcc\n    style Topic fill:#fcc\n    style Geometry fill:#fcc\n    style Node fill:#fcc\n    style Temperature fill:#fcc\n    style Humidity fill:#fcc"}))}m.isMDXComponent=!0},99271:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/building_color-46025dc2c47b49ab2b617c8cff235ccd.png"}}]);